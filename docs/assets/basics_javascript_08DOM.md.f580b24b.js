import{_ as p,a as t}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.2d10c1d4.js";import{_ as i}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.63457685.js";import{_ as r,o,c,D as s,x as a,a as d,Q as h}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const E=JSON.parse('{"title":"DOM","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. DOM","slug":"_1-dom","link":"#_1-dom","children":[{"level":3,"title":"1.1 DOM简介","slug":"_1-1-dom简介","link":"#_1-1-dom简介","children":[]},{"level":3,"title":"1.2 DOM树","slug":"_1-2-dom树","link":"#_1-2-dom树","children":[]}]},{"level":2,"title":"2. 获取元素","slug":"_2-获取元素","link":"#_2-获取元素","children":[{"level":3,"title":"2.1 经典","slug":"_2-1-经典","link":"#_2-1-经典","children":[{"level":4,"title":"2.1.1 getElementById","slug":"_2-1-1-getelementbyid","link":"#_2-1-1-getelementbyid","children":[]},{"level":4,"title":"2.1.2 getElementsByTagName","slug":"_2-1-2-getelementsbytagname","link":"#_2-1-2-getelementsbytagname","children":[]}]},{"level":3,"title":"2.2 HTML5新增","slug":"_2-2-html5新增","link":"#_2-2-html5新增","children":[{"level":4,"title":"2.2.1 getElementsByClassName","slug":"_2-2-1-getelementsbyclassname","link":"#_2-2-1-getelementsbyclassname","children":[]},{"level":4,"title":"2.2.2 querySelector","slug":"_2-2-2-queryselector","link":"#_2-2-2-queryselector","children":[]},{"level":4,"title":"2.2.3 querySelectorAll","slug":"_2-2-3-queryselectorall","link":"#_2-2-3-queryselectorall","children":[]}]},{"level":3,"title":"2.3 body&html","slug":"_2-3-body-html","link":"#_2-3-body-html","children":[{"level":4,"title":"2.3.1 document.body","slug":"_2-3-1-document-body","link":"#_2-3-1-document-body","children":[]},{"level":4,"title":"2.3.2 document.documentElement","slug":"_2-3-2-document-documentelement","link":"#_2-3-2-document-documentelement","children":[]}]}]},{"level":2,"title":"3. 事件基础","slug":"_3-事件基础","link":"#_3-事件基础","children":[{"level":3,"title":"3.1 事件三要素","slug":"_3-1-事件三要素","link":"#_3-1-事件三要素","children":[]},{"level":3,"title":"3.2 执行事件步骤","slug":"_3-2-执行事件步骤","link":"#_3-2-执行事件步骤","children":[]},{"level":3,"title":"3.3 常见鼠标事件","slug":"_3-3-常见鼠标事件","link":"#_3-3-常见鼠标事件","children":[]}]},{"level":2,"title":"4. 操作元素","slug":"_4-操作元素","link":"#_4-操作元素","children":[{"level":3,"title":"4.1 改变元素内容","slug":"_4-1-改变元素内容","link":"#_4-1-改变元素内容","children":[]},{"level":3,"title":"4.2 改变元素属性","slug":"_4-2-改变元素属性","link":"#_4-2-改变元素属性","children":[]},{"level":3,"title":"4.3 表单元素的属性操作","slug":"_4-3-表单元素的属性操作","link":"#_4-3-表单元素的属性操作","children":[]},{"level":3,"title":"4.4 样式属性操作","slug":"_4-4-样式属性操作","link":"#_4-4-样式属性操作","children":[{"level":4,"title":"4.4.1 element.style","slug":"_4-4-1-element-style","link":"#_4-4-1-element-style","children":[]},{"level":4,"title":"4.4.2 element.className","slug":"_4-4-2-element-classname","link":"#_4-4-2-element-classname","children":[]}]},{"level":3,"title":"4.5 自定义属性的操作","slug":"_4-5-自定义属性的操作","link":"#_4-5-自定义属性的操作","children":[{"level":4,"title":"4.5.1 获取属性值","slug":"_4-5-1-获取属性值","link":"#_4-5-1-获取属性值","children":[]},{"level":4,"title":"4.5.2 设置属性值","slug":"_4-5-2-设置属性值","link":"#_4-5-2-设置属性值","children":[]},{"level":4,"title":"4.5.3 移除属性","slug":"_4-5-3-移除属性","link":"#_4-5-3-移除属性","children":[]}]},{"level":3,"title":"4.6 H5自定义属性","slug":"_4-6-h5自定义属性","link":"#_4-6-h5自定义属性","children":[{"level":4,"title":"4.6.1 设置H5自定义属性","slug":"_4-6-1-设置h5自定义属性","link":"#_4-6-1-设置h5自定义属性","children":[]},{"level":4,"title":"4.6.2 获取H5自定义属性","slug":"_4-6-2-获取h5自定义属性","link":"#_4-6-2-获取h5自定义属性","children":[{"level":5,"title":"4.6.2.1 兼容性获取","slug":"_4-6-2-1-兼容性获取","link":"#_4-6-2-1-兼容性获取","children":[]},{"level":5,"title":"4.6.2.2 H5新增 (IE11+ )","slug":"_4-6-2-2-h5新增-ie11","link":"#_4-6-2-2-h5新增-ie11","children":[]}]}]}]},{"level":2,"title":"5 节点操作","slug":"_5-节点操作","link":"#_5-节点操作","children":[{"level":3,"title":"5.1 获取元素通常使用两种方式","slug":"_5-1-获取元素通常使用两种方式","link":"#_5-1-获取元素通常使用两种方式","children":[{"level":4,"title":"5.1.1 利用 DOM 提供的方法获取元素","slug":"_5-1-1-利用-dom-提供的方法获取元素","link":"#_5-1-1-利用-dom-提供的方法获取元素","children":[]},{"level":4,"title":"5.1.2 利用节点层级关系获取元素","slug":"_5-1-2-利用节点层级关系获取元素","link":"#_5-1-2-利用节点层级关系获取元素","children":[]}]},{"level":3,"title":"5.2 节点概述","slug":"_5-2-节点概述","link":"#_5-2-节点概述","children":[]},{"level":3,"title":"5.3 节点层级","slug":"_5-3-节点层级","link":"#_5-3-节点层级","children":[{"level":4,"title":"5.3.1 父级节点 parentNode","slug":"_5-3-1-父级节点-parentnode","link":"#_5-3-1-父级节点-parentnode","children":[]},{"level":4,"title":"5.3.2 子节点","slug":"_5-3-2-子节点","link":"#_5-3-2-子节点","children":[{"level":5,"title":"childNodes","slug":"childnodes","link":"#childnodes","children":[]},{"level":5,"title":"lastChild","slug":"lastchild","link":"#lastchild","children":[]},{"level":5,"title":"firstElementChild","slug":"firstelementchild","link":"#firstelementchild","children":[]},{"level":5,"title":"lastElementChild","slug":"lastelementchild","link":"#lastelementchild","children":[]},{"level":5,"title":"实际开发","slug":"实际开发","link":"#实际开发","children":[]}]},{"level":4,"title":"5.3.3 兄弟节点","slug":"_5-3-3-兄弟节点","link":"#_5-3-3-兄弟节点","children":[{"level":5,"title":"nextSibling","slug":"nextsibling","link":"#nextsibling","children":[]},{"level":5,"title":"previousSibling","slug":"previoussibling","link":"#previoussibling","children":[]},{"level":5,"title":"nextElementSibling","slug":"nextelementsibling","link":"#nextelementsibling","children":[]},{"level":5,"title":"previousElementSibling","slug":"previouselementsibling","link":"#previouselementsibling","children":[]},{"level":5,"title":"解决兼容性问题","slug":"解决兼容性问题","link":"#解决兼容性问题","children":[]}]}]},{"level":3,"title":"5.4 创建节点","slug":"_5-4-创建节点","link":"#_5-4-创建节点","children":[]},{"level":3,"title":"5.5 添加节点","slug":"_5-5-添加节点","link":"#_5-5-添加节点","children":[{"level":4,"title":"appendChild","slug":"appendchild","link":"#appendchild","children":[]},{"level":4,"title":"insertBefore","slug":"insertbefore","link":"#insertbefore","children":[]}]},{"level":3,"title":"5.5 删除节点 removeChild","slug":"_5-5-删除节点-removechild","link":"#_5-5-删除节点-removechild","children":[]},{"level":3,"title":"5.6 复制节点(克隆节点) cloneNode","slug":"_5-6-复制节点-克隆节点-clonenode","link":"#_5-6-复制节点-克隆节点-clonenode","children":[]},{"level":3,"title":"5.7 三种动态创建元素区别","slug":"_5-7-三种动态创建元素区别","link":"#_5-7-三种动态创建元素区别","children":[]}]},{"level":2,"title":"6. 总结","slug":"_6-总结","link":"#_6-总结","children":[{"level":3,"title":"6.1 创建","slug":"_6-1-创建","link":"#_6-1-创建","children":[]},{"level":3,"title":"6.2 增","slug":"_6-2-增","link":"#_6-2-增","children":[]},{"level":3,"title":"6.3 删","slug":"_6-3-删","link":"#_6-3-删","children":[]},{"level":3,"title":"6.4 改","slug":"_6-4-改","link":"#_6-4-改","children":[]},{"level":3,"title":"6.5 查","slug":"_6-5-查","link":"#_6-5-查","children":[]},{"level":3,"title":"6.6 属性操作","slug":"_6-6-属性操作","link":"#_6-6-属性操作","children":[]},{"level":3,"title":"6.7 事件操作","slug":"_6-7-事件操作","link":"#_6-7-事件操作","children":[]}]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"basics/javascript/08DOM.md","lastUpdated":1678883566000}'),u={name:"basics/javascript/08DOM.md"},y=a("h1",{id:"dom",tabindex:"-1"},[d("DOM "),a("a",{class:"header-anchor",href:"#dom","aria-hidden":"true"},"#")],-1),D=h(`<p>@[toc]</p><h2 id="_1-dom" tabindex="-1">1. DOM <a class="header-anchor" href="#_1-dom" aria-hidden="true">#</a></h2><h3 id="_1-1-dom简介" tabindex="-1">1.1 DOM简介 <a class="header-anchor" href="#_1-1-dom简介" aria-hidden="true">#</a></h3><p>文档对象模型（Document Object Model，简称 DOM），是 W3C 组织推荐的处理可扩展标记语言（HTML或者XML）的标准编程接口。</p><p>W3C 已经定义了一系列的 DOM 接口，通过这些 DOM 接口可以改变网页的内容、结构和样式。</p><h3 id="_1-2-dom树" tabindex="-1">1.2 DOM树 <a class="header-anchor" href="#_1-2-dom树" aria-hidden="true">#</a></h3><p><img src="https://img-blog.csdnimg.cn/img_convert/980e07d984b50c65427e09ead7367430.gif" alt="image"></p><ul><li>文档：一个页面就是一个文档，DOM 中使用 document 表示</li><li>元素：页面中的所有标签都是元素，DOM 中使用 element 表示</li><li>节点：网页中的所有内容都是节点（标签、属性、文本、注释等），DOM 中使用 node 表示</li></ul><p><strong>DOM 把以上内容都看做是对象</strong></p><h2 id="_2-获取元素" tabindex="-1">2. 获取元素 <a class="header-anchor" href="#_2-获取元素" aria-hidden="true">#</a></h2><h3 id="_2-1-经典" tabindex="-1">2.1 经典 <a class="header-anchor" href="#_2-1-经典" aria-hidden="true">#</a></h3><h4 id="_2-1-1-getelementbyid" tabindex="-1">2.1.1 getElementById <a class="header-anchor" href="#_2-1-1-getelementbyid" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-1-2-getelementsbytagname" tabindex="-1">2.1.2 getElementsByTagName <a class="header-anchor" href="#_2-1-2-getelementsbytagname" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementsByTagName</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">标签名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>因为得到的是一个对象的集合，所以我们想要操作里面的元素就需要遍历。</li><li>得到元素对象是动态的</li><li>如果获取不到元素,则返回为空的伪数组(因为获取不到对象)</li></ul><h3 id="_2-2-html5新增" tabindex="-1">2.2 HTML5新增 <a class="header-anchor" href="#_2-2-html5新增" aria-hidden="true">#</a></h3><h4 id="_2-2-1-getelementsbyclassname" tabindex="-1">2.2.1 getElementsByClassName <a class="header-anchor" href="#_2-2-1-getelementsbyclassname" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementsByClassName</span><span style="color:#A6ACCD;">(‘类名’)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 根据类名返回元素对象集合</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-2-2-queryselector" tabindex="-1">2.2.2 querySelector <a class="header-anchor" href="#_2-2-2-queryselector" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">选择器</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 根据指定选择器返回第一个元素对象</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-2-3-queryselectorall" tabindex="-1">2.2.3 querySelectorAll <a class="header-anchor" href="#_2-2-3-queryselectorall" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">选择器</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 根据指定选择器返回</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-3-body-html" tabindex="-1">2.3 body&amp;html <a class="header-anchor" href="#_2-3-body-html" aria-hidden="true">#</a></h3><h4 id="_2-3-1-document-body" tabindex="-1">2.3.1 document.body <a class="header-anchor" href="#_2-3-1-document-body" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 返回 body元素对象</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-3-2-document-documentelement" tabindex="-1">2.3.2 document.documentElement <a class="header-anchor" href="#_2-3-2-document-documentelement" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">documentElement</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 返回 html元素对象</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_3-事件基础" tabindex="-1">3. 事件基础 <a class="header-anchor" href="#_3-事件基础" aria-hidden="true">#</a></h2><h3 id="_3-1-事件三要素" tabindex="-1">3.1 事件三要素 <a class="header-anchor" href="#_3-1-事件三要素" aria-hidden="true">#</a></h3><ol><li>事件源————事件被触发的对象</li><li>事件类型————如何触发 什么事件（鼠标点击、经过、键盘按下）</li><li>事件处理程序————通过函数赋值完成</li></ol><h3 id="_3-2-执行事件步骤" tabindex="-1">3.2 执行事件步骤 <a class="header-anchor" href="#_3-2-执行事件步骤" aria-hidden="true">#</a></h3><ol><li>获取事件源</li><li>注册事件（绑定事件）</li><li>添加事件处理程序</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> btn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">btn</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">btn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onclick</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">你好吗</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-3-常见鼠标事件" tabindex="-1">3.3 常见鼠标事件 <a class="header-anchor" href="#_3-3-常见鼠标事件" aria-hidden="true">#</a></h3><table><thead><tr><th>鼠标事件</th><th>触发条件</th></tr></thead><tbody><tr><td>onclick</td><td>鼠标点击左键触发</td></tr><tr><td>onmouseover</td><td>鼠标经过触发</td></tr><tr><td>onmoouseout</td><td>鼠标离开触发</td></tr><tr><td>onfocus</td><td>获得鼠标焦点触发</td></tr><tr><td>onblur</td><td>失去鼠标焦点触发</td></tr><tr><td>onmousemove</td><td>鼠标移动触发</td></tr><tr><td>onmouseup</td><td>鼠标弹起触发</td></tr><tr><td>onmousedowm</td><td>鼠标按下触发</td></tr></tbody></table><h2 id="_4-操作元素" tabindex="-1">4. 操作元素 <a class="header-anchor" href="#_4-操作元素" aria-hidden="true">#</a></h2><h3 id="_4-1-改变元素内容" tabindex="-1">4.1 改变元素内容 <a class="header-anchor" href="#_4-1-改变元素内容" aria-hidden="true">#</a></h3><ol><li>从起始到终止位置，但它去除html标签，同时空格和换行也去掉</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>从起始到终止位置，包括html标签，同时保留空格和换行</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-2-改变元素属性" tabindex="-1">4.2 改变元素属性 <a class="header-anchor" href="#_4-2-改变元素属性" aria-hidden="true">#</a></h3><ul><li>innerText、innerHTML 改变元素内容</li><li>src、href</li><li>id、alt、title</li></ul><h3 id="_4-3-表单元素的属性操作" tabindex="-1">4.3 表单元素的属性操作 <a class="header-anchor" href="#_4-3-表单元素的属性操作" aria-hidden="true">#</a></h3><ul><li>type、value、checked、selected、disabled</li></ul><h3 id="_4-4-样式属性操作" tabindex="-1">4.4 样式属性操作 <a class="header-anchor" href="#_4-4-样式属性操作" aria-hidden="true">#</a></h3><h4 id="_4-4-1-element-style" tabindex="-1">4.4.1 element.style <a class="header-anchor" href="#_4-4-1-element-style" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style  </span><span style="color:#676E95;font-style:italic;">// 行内样式操作</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_4-4-2-element-classname" tabindex="-1">4.4.2 element.className <a class="header-anchor" href="#_4-4-2-element-classname" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">className </span><span style="color:#676E95;font-style:italic;">// 类名样式操作</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>注意</li></ul><ol><li>JS 里面的样式采取驼峰命名法 比如 fontSize、 backgroundColor</li><li>JS 修改 style 样式操作，产生的是行内样式，CSS 权重比较高</li><li>如果样式修改较多，可以采取操作类名方式更改元素样式</li><li>class因为是个保留字，因此使用className来操作元素类名属性</li><li>className 会直接更改元素的类名，会覆盖原先的类名</li></ol><h3 id="_4-5-自定义属性的操作" tabindex="-1">4.5 自定义属性的操作 <a class="header-anchor" href="#_4-5-自定义属性的操作" aria-hidden="true">#</a></h3><h4 id="_4-5-1-获取属性值" tabindex="-1">4.5.1 获取属性值 <a class="header-anchor" href="#_4-5-1-获取属性值" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">属性  获取属性值。</span></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">属性</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>区别</p><ul><li>element.属性 获取内置属性值（元素本身自带的属性）</li><li>element.getAttribute(‘属性’); 主要获得自定义的属性 （标准） 我们程序员自定义的属性</li></ul><h4 id="_4-5-2-设置属性值" tabindex="-1">4.5.2 设置属性值 <a class="header-anchor" href="#_4-5-2-设置属性值" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">属性 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">值</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 设置内置属性值</span></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">属性</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">值</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>区别</p><ul><li>element.属性 设置内置属性值</li><li>element.setAttribute(&#39;属性&#39;); 主要设置自定义的属性 （标准）</li></ul><h4 id="_4-5-3-移除属性" tabindex="-1">4.5.3 移除属性 <a class="header-anchor" href="#_4-5-3-移除属性" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">属性</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-6-h5自定义属性" tabindex="-1">4.6 H5自定义属性 <a class="header-anchor" href="#_4-6-h5自定义属性" aria-hidden="true">#</a></h3><p>自定义属性目的：是为了保存并使用数据。有些数据可以保存到页面中而不用保存到数据库中。</p><p>自定义属性获取是通过getAttribute(‘属性’) 获取。</p><p>但是有些自定义属性很容易引起歧义，不容易判断是元素的内置属性还是自定义属性。所以H5做了一些新的规定</p><h4 id="_4-6-1-设置h5自定义属性" tabindex="-1">4.6.1 设置H5自定义属性 <a class="header-anchor" href="#_4-6-1-设置h5自定义属性" aria-hidden="true">#</a></h4><ul><li>H5规定自定义属性data-开头做为属性名并且赋值。</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-index</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_4-6-2-获取h5自定义属性" tabindex="-1">4.6.2 获取H5自定义属性 <a class="header-anchor" href="#_4-6-2-获取h5自定义属性" aria-hidden="true">#</a></h4><h5 id="_4-6-2-1-兼容性获取" tabindex="-1">4.6.2.1 兼容性获取 <a class="header-anchor" href="#_4-6-2-1-兼容性获取" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="_4-6-2-2-h5新增-ie11" tabindex="-1">4.6.2.2 H5新增 (IE11+ ) <a class="header-anchor" href="#_4-6-2-2-h5新增-ie11" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// ie 11才开始支持</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>dataset 是一个集合，里面存放了所有以data开头的自定义属性</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">getTime</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">20</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-index</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-list-name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">andy</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> div </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// console.log(div.getTime); // undefined</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">getTime</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    div</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-time</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data-list-name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// h5新增的获取自定义属性的方法 它只能获取data-开头的</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// dataset 是一个集合里面存放了所有以data开头的自定义属性</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">index)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 如果自定义属性里面有多个-链接的单词，我们获取的时候采取 驼峰命名法</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listName)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">listName</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_5-节点操作" tabindex="-1">5 节点操作 <a class="header-anchor" href="#_5-节点操作" aria-hidden="true">#</a></h2><h3 id="_5-1-获取元素通常使用两种方式" tabindex="-1">5.1 获取元素通常使用两种方式 <a class="header-anchor" href="#_5-1-获取元素通常使用两种方式" aria-hidden="true">#</a></h3><h4 id="_5-1-1-利用-dom-提供的方法获取元素" tabindex="-1">5.1.1 利用 DOM 提供的方法获取元素 <a class="header-anchor" href="#_5-1-1-利用-dom-提供的方法获取元素" aria-hidden="true">#</a></h4><ul><li>document.getElementById()</li><li>document.getElementsByTagName()</li><li>document.querySelector 等</li><li>逻辑性不强、繁琐</li></ul><h4 id="_5-1-2-利用节点层级关系获取元素" tabindex="-1">5.1.2 利用节点层级关系获取元素 <a class="header-anchor" href="#_5-1-2-利用节点层级关系获取元素" aria-hidden="true">#</a></h4><ul><li>利用父子兄节点关系获取元素</li><li>逻辑性强， 但是兼容性稍差</li></ul><p><strong>这两种方式都可以获取元素节点，我们后面都会使用，但是节点操作更简单</strong></p><h3 id="_5-2-节点概述" tabindex="-1">5.2 节点概述 <a class="header-anchor" href="#_5-2-节点概述" aria-hidden="true">#</a></h3><ul><li>网页中的所有内容都是节点（标签、属性、文本、注释等），在DOM 中，节点使用 node 来表示。</li><li>HTML DOM 树中的所有节点均可通过 JavaScript 进行访问，所有 HTML 元素（节点）均可被修改，也可以创建或删除。</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/d376b637e076e430c1adc7664360e795.gif" alt="image"></p><ul><li>一般地，节点至少拥有nodeType（节点类型）、nodeName（节点名称）和nodeValue（节点值）这三个基本属性。</li></ul><ol><li>元素节点 nodeType 为 1</li><li>属性节点 nodeType 为 2</li><li>文本节点 nodeType 为 3 （文本节点包含文字、空格、换行等）</li></ol><ul><li>我们在实际开发中，节点操作主要操作的是<strong>元素节点</strong></li></ul><h3 id="_5-3-节点层级" tabindex="-1">5.3 节点层级 <a class="header-anchor" href="#_5-3-节点层级" aria-hidden="true">#</a></h3><ul><li>利用 DOM 树可以把节点划分为不同的层级关系，常见的是父子兄层级关系。</li></ul><h4 id="_5-3-1-父级节点-parentnode" tabindex="-1">5.3.1 父级节点 parentNode <a class="header-anchor" href="#_5-3-1-父级节点-parentnode" aria-hidden="true">#</a></h4><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node.parentNode</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>parentNode 属性可返回某节点的父节点，注意是<strong>最近的</strong>一个父节点</li><li>如果指定的节点没有父节点则返回 null</li></ul><h4 id="_5-3-2-子节点" tabindex="-1">5.3.2 子节点 <a class="header-anchor" href="#_5-3-2-子节点" aria-hidden="true">#</a></h4><h5 id="childnodes" tabindex="-1">childNodes <a class="header-anchor" href="#childnodes" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.</span><span style="color:#A6ACCD;"> parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">childNodes（标准）   </span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>parentNode.childNodes 返回包含指定节点的子节点的集合，该集合为即时更新的集合。</li><li>注意：返回值里面包含了所有的子节点，包括元素节点，文本节点等。</li><li>如果只想要获得里面的元素节点，则需要专门处理。</li><li>所以我们一般<strong>不提倡使用</strong>childNodes</li></ul><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">var ul = document. querySelector(‘ul’);</span></span>
<span class="line"><span style="color:#A6ACCD;">for(var i = 0; i &lt; ul.childNodes.length;i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">if (ul.childNodes[i].nodeType == 1) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    // ul.childNodes[i] 是元素节点</span></span>
<span class="line"><span style="color:#A6ACCD;">    console.log(ul.childNodes[i]);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\`\`\`javascript</span></span>
<span class="line"><span style="color:#A6ACCD;">##### children</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>parentNode.children（非标准）</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">- parentNode.children 是一个只读属性，返回所有的子元素节点</span></span>
<span class="line"><span style="color:#A6ACCD;">- 它只返回子元素节点，其余节点不返回 （这个是我们重点掌握的）</span></span>
<span class="line"><span style="color:#A6ACCD;">- 虽然children 是一个非标准，但是得到了各个浏览器的支持，因此我们可以放心使用</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">##### firstChild  </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\`\`\`javascript</span></span>
<span class="line"><span style="color:#A6ACCD;">parentNode.firstChild  </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>firstChild 返回第一个子节点，找不到则返回null</li><li>同样，也是包含所有的节点</li></ul><h5 id="lastchild" tabindex="-1">lastChild <a class="header-anchor" href="#lastchild" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lastChild</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>lastChild 返回最后一个子节点，找不到则返回null</li><li>同样，也是包含所有的节点。</li></ul><h5 id="firstelementchild" tabindex="-1">firstElementChild <a class="header-anchor" href="#firstelementchild" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">firstElementChild</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>firstElementChild 返回第一个子元素节点，找不到则返回null</li></ul><h5 id="lastelementchild" tabindex="-1">lastElementChild <a class="header-anchor" href="#lastelementchild" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lastElementChild</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>lastElementChild 返回最后一个子元素节点，找不到则返回null。</li></ul><p>注意：这两个方法有<strong>兼容性问题</strong>，IE9 以上才支持。</p><h5 id="实际开发" tabindex="-1">实际开发 <a class="header-anchor" href="#实际开发" aria-hidden="true">#</a></h5><ul><li><p>实际开发中，firstChild 和 lastChild 包含其他节点，操作不方便，而 firstElementChild 和 lastElementChild 又有兼容性问题，那么我们如何获取第一个子元素节点或最后一个子元素节点呢？</p></li><li><p>解决方案：</p></li><li><p>如果想要第一个子元素节点，可以使用</p></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">chilren[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>如果想要最后一个子元素节点，可以使用</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">chilren[parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">chilren</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]  </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_5-3-3-兄弟节点" tabindex="-1">5.3.3 兄弟节点 <a class="header-anchor" href="#_5-3-3-兄弟节点" aria-hidden="true">#</a></h4><h5 id="nextsibling" tabindex="-1">nextSibling <a class="header-anchor" href="#nextsibling" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nextSibling  </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>nextSibling 返回当前元素的下一个兄弟元素节点，找不到则返回null。</li><li>同样，也是包含所有的节点。</li></ul><h5 id="previoussibling" tabindex="-1">previousSibling <a class="header-anchor" href="#previoussibling" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">previousSibling</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>previousSibling 返回当前元素上一个兄弟元素节点，找不到则返回null。</li><li>同样，也是包含所有的节点。</li></ul><h5 id="nextelementsibling" tabindex="-1">nextElementSibling <a class="header-anchor" href="#nextelementsibling" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nextElementSibling</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>nextElementSibling 返回当前元素下一个兄弟元素节点，找不到则返回null。</li></ul><h5 id="previouselementsibling" tabindex="-1">previousElementSibling <a class="header-anchor" href="#previouselementsibling" aria-hidden="true">#</a></h5><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">previousElementSibling</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>previousElementSibling 返回当前元素上一个兄弟节点，找不到则返回null。</li><li>注意：这两个方法有<strong>兼容性问题</strong>， IE9 以上才支持。</li></ul><h5 id="解决兼容性问题" tabindex="-1">解决兼容性问题 <a class="header-anchor" href="#解决兼容性问题" aria-hidden="true">#</a></h5><p>问：如何解决兼容性问题 ？ 答：自己封装一个兼容性的函数</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getNextElementSibling</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">element</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nextSibling</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nodeType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_5-4-创建节点" tabindex="-1">5.4 创建节点 <a class="header-anchor" href="#_5-4-创建节点" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tagName</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>document.createElement() 方法创建由 tagName 指定的 HTML 元素</li><li>因为这些元素原先不存在，是根据我们的需求动态生成的，所以我们也称为<strong>动态创建元素节点</strong></li></ul><h3 id="_5-5-添加节点" tabindex="-1">5.5 添加节点 <a class="header-anchor" href="#_5-5-添加节点" aria-hidden="true">#</a></h3><h4 id="appendchild" tabindex="-1">appendChild <a class="header-anchor" href="#appendchild" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#A6ACCD;">(child)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>node.appendChild() 方法将一个节点添加到指定父节点的子节点列表末尾</li><li>类似于 CSS 里面的 after 伪元素</li><li>类似于数组的push</li></ul><h4 id="insertbefore" tabindex="-1">insertBefore <a class="header-anchor" href="#insertbefore" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insertBefore</span><span style="color:#A6ACCD;">(child</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 指定元素)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>node.insertBefore() 方法将一个节点添加到父节点的指定子节点前面</li><li>类似于 CSS 里面的 before 伪元素</li></ul><h3 id="_5-5-删除节点-removechild" tabindex="-1">5.5 删除节点 removeChild <a class="header-anchor" href="#_5-5-删除节点-removechild" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeChild</span><span style="color:#A6ACCD;">(child)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>node.removeChild() 方法从 DOM 中删除一个子节点，返回删除的节点。</li></ul><h3 id="_5-6-复制节点-克隆节点-clonenode" tabindex="-1">5.6 复制节点(克隆节点) cloneNode <a class="header-anchor" href="#_5-6-复制节点-克隆节点-clonenode" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cloneNode</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>node.cloneNode() 方法返回调用该方法的节点的一个副本。</p></li><li><p>也称为克隆节点/拷贝节点</p></li><li><p>注意：</p></li></ul><ol><li>如果括号参数为空或者为 false则是浅拷贝，即只克隆复制节点本身，不克隆里面的子节点。</li><li>如果括号参数为 true ，则是深度拷贝，会复制节点本身以及里面所有的子节点。</li></ol><h3 id="_5-7-三种动态创建元素区别" tabindex="-1">5.7 三种动态创建元素区别 <a class="header-anchor" href="#_5-7-三种动态创建元素区别" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol><li>document.write 是直接将内容写入页面的内容流，但是文档流执行完毕，则它会导致页面全部重绘</li><li>innerHTML 是将内容写入某个 DOM 节点，不会导致页面全部重绘</li><li>innerHTML 创建多个元素效率更高（不要拼接字符串，采取数组形式拼接），结构稍微复杂</li><li>createElement() 创建多个元素效率稍低一点点，但是结构更清晰</li></ol><ul><li>总结：不同浏览器下，innerHTML 效率要比 creatElement 高</li></ul><h2 id="_6-总结" tabindex="-1">6. 总结 <a class="header-anchor" href="#_6-总结" aria-hidden="true">#</a></h2><ul><li>文档对象模型（Document Object Model，简称 DOM），是 W3C 组织推荐的处理可扩展标记语言（HTML或者XML）的标准编程接口。</li><li>W3C 已经定义了一系列的 DOM 接口，通过这些 DOM 接口可以改变网页的内容、结构和样式。</li></ul><ol><li>对于JavaScript，为了能够使JavaScript操作HTML，JavaScript就有了一套自己的dom编程接口。</li><li>对于HTML，dom使得html形成一棵dom树. 包含 文档、元素、节点</li></ol><ul><li><p>我们获取过来的DOM元素是一个对象（object），所以称为 文档对象模型</p></li><li><p>关于dom操作，我们主要针对于元素的操作。主要有创建、增、删、改、查、属性操作、事件操作。</p></li></ul><h3 id="_6-1-创建" tabindex="-1">6.1 创建 <a class="header-anchor" href="#_6-1-创建" aria-hidden="true">#</a></h3><ol><li>document.write</li></ol><ul><li>如果页面文档加载完毕，再调用它会导致页面重绘</li></ul><ol start="2"><li>innerHTML</li><li>createElement</li></ol><h3 id="_6-2-增" tabindex="-1">6.2 增 <a class="header-anchor" href="#_6-2-增" aria-hidden="true">#</a></h3><ol><li>appendChild</li><li>insertBefore</li></ol><h3 id="_6-3-删" tabindex="-1">6.3 删 <a class="header-anchor" href="#_6-3-删" aria-hidden="true">#</a></h3><ol><li>removeChild</li></ol><h3 id="_6-4-改" tabindex="-1">6.4 改 <a class="header-anchor" href="#_6-4-改" aria-hidden="true">#</a></h3><ul><li>主要修改dom的元素属性，dom元素的内容、属性, 表单的值等</li><li>修改元素属性： src、href、title等</li><li>修改普通元素内容： innerHTML 、innerText</li><li>修改表单元素： value、type、disabled等</li><li>修改元素样式： style、className</li></ul><h3 id="_6-5-查" tabindex="-1">6.5 查 <a class="header-anchor" href="#_6-5-查" aria-hidden="true">#</a></h3><ul><li>主要获取查询dom的元素</li></ul><ol><li>DOM提供的API方法</li></ol><ul><li>getElementById、</li><li>getElementsByTagName</li><li>古老用法 不太推荐</li></ul><ol start="2"><li>H5提供的新方法</li></ol><ul><li>querySelector、</li><li>querySelectorAll</li><li>提倡</li></ul><ol start="3"><li>利用节点操作获取元素</li></ol><ul><li>父(parentNode)</li><li>子(children)</li><li>兄(previousElementSibling、nextElementSibling)</li><li>提倡</li></ul><h3 id="_6-6-属性操作" tabindex="-1">6.6 属性操作 <a class="header-anchor" href="#_6-6-属性操作" aria-hidden="true">#</a></h3><ul><li>主要针对于自定义属性。</li></ul><ol><li>setAttribute：设置dom的属性值</li><li>getAttribute：得到dom的属性值</li><li>removeAttribute移除属性</li></ol><h3 id="_6-7-事件操作" tabindex="-1">6.7 事件操作 <a class="header-anchor" href="#_6-7-事件操作" aria-hidden="true">#</a></h3><p>给元素注册事件</p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,185);function m(b,C,F,A,g,v){const l=i,n=p,e=t;return o(),c("div",null,[y,s(l,{readTime:"10",words:"3.1k"}),D,s(n),s(e)])}const j=r(u,[["render",m]]);export{E as __pageData,j as default};
