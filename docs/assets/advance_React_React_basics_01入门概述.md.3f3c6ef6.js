import{_ as e,a as o}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.3dcd3b9e.js";import{_ as t}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.358bd1c3.js";import{_ as c,o as r,c as D,D as a,x as s,a as i,Q as F}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const x=JSON.parse('{"title":"1. React 入门概述","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.1 介绍","slug":"_1-1-介绍","link":"#_1-1-介绍","children":[]},{"level":2,"title":"1.2 原生JavaScript的缺点","slug":"_1-2-原生javascript的缺点","link":"#_1-2-原生javascript的缺点","children":[{"level":3,"title":"【补充】浏览器重绘重排","slug":"【补充】浏览器重绘重排","link":"#【补充】浏览器重绘重排","children":[]},{"level":3,"title":"【补充】模块化与组件化","slug":"【补充】模块化与组件化","link":"#【补充】模块化与组件化","children":[]}]},{"level":2,"title":"1.3 React的特点","slug":"_1-3-react的特点","link":"#_1-3-react的特点","children":[]},{"level":2,"title":"1.4. React高效的原因","slug":"_1-4-react高效的原因","link":"#_1-4-react高效的原因","children":[]},{"level":2,"title":"2.1 相关库介绍","slug":"_2-1-相关库介绍","link":"#_2-1-相关库介绍","children":[{"level":3,"title":"【补充】babel.js的作用","slug":"【补充】babel-js的作用","link":"#【补充】babel-js的作用","children":[]}]},{"level":2,"title":"2.2 使用JSX创建虚拟DOM","slug":"_2-2-使用jsx创建虚拟dom","link":"#_2-2-使用jsx创建虚拟dom","children":[]},{"level":2,"title":"2.3 渲染虚拟DOM(元素)","slug":"_2-3-渲染虚拟dom-元素","link":"#_2-3-渲染虚拟dom-元素","children":[]},{"level":2,"title":"2.4 页面显示","slug":"_2-4-页面显示","link":"#_2-4-页面显示","children":[]},{"level":2,"title":"3.1 纯JS方式(一般不用)","slug":"_3-1-纯js方式-一般不用","link":"#_3-1-纯js方式-一般不用","children":[]},{"level":2,"title":"3.2 JSX方式","slug":"_3-2-jsx方式","link":"#_3-2-jsx方式","children":[]},{"level":2,"title":"5.1 概述","slug":"_5-1-概述","link":"#_5-1-概述","children":[]},{"level":2,"title":"5.2 基本语法规则","slug":"_5-2-基本语法规则","link":"#_5-2-基本语法规则","children":[{"level":3,"title":"【补充】 区分js表达式与js语句","slug":"【补充】-区分js表达式与js语句","link":"#【补充】-区分js表达式与js语句","children":[]}]},{"level":2,"title":"5.3 总结","slug":"_5-3-总结","link":"#_5-3-总结","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"advance/React/React_basics/01入门概述.md","lastUpdated":null}'),y={name:"advance/React/React_basics/01入门概述.md"},d=s("blockquote",null,[s("p",null,"从今天起，YK菌要开始学习React了 ~ React基础系列，本篇说一些React基本概念，算是入门概述，根据B站尚硅谷React教学视频形成的笔记，适当加了一些自己的拓展。")],-1),b=s("p",null,[s("a",{href:"https://react.docschina.org/",target:"_blank",rel:"noreferrer"},"官方文档https://react.docschina.org/")],-1),u=s("h1",{id:"_1-react-入门概述",tabindex:"-1"},[i("1. React 入门概述 "),s("a",{class:"header-anchor",href:"#_1-react-入门概述","aria-hidden":"true"},"#")],-1),C=F(`<h2 id="_1-1-介绍" tabindex="-1">1.1 介绍 <a class="header-anchor" href="#_1-1-介绍" aria-hidden="true">#</a></h2><p>用于动态构建用户界面的 JavaScript 库(只关注于视图)</p><ol><li>发送请求获取数据</li><li>处理数据（过滤，整理格式等）</li><li><strong>操作DOM呈现页面</strong>（React做的事情）</li></ol><p>React是一个将数据渲染为HTML视图的开源JavaScript库</p><h2 id="_1-2-原生javascript的缺点" tabindex="-1">1.2 原生JavaScript的缺点 <a class="header-anchor" href="#_1-2-原生javascript的缺点" aria-hidden="true">#</a></h2><ol><li>原生JavaScript操作DOM繁琐，效率低（DOM-API操作UI）</li><li>使用JavaScript直接操作DOM，浏览器会进行大量的<strong>重绘重排</strong></li><li>原生JavaScript没有<strong>组件化</strong>编码方案，代码复用率很低</li></ol><h3 id="【补充】浏览器重绘重排" tabindex="-1">【补充】浏览器重绘重排 <a class="header-anchor" href="#【补充】浏览器重绘重排" aria-hidden="true">#</a></h3><p><a href="https://juejin.cn/post/6844903745914929165#heading-3" target="_blank" rel="noreferrer">浏览器重绘(repaint)重排(reflow)与优化[浏览器机制]</a></p><p><strong>重绘</strong>(repaint)：当一个元素的外观发生改变，但没有改变布局,重新把元素外观绘制出来的过程，叫做重绘</p><p><strong>重排</strong>(reflow)：当DOM的变化影响了元素的几何信息(DOM对象的位置和尺寸大小)，浏览器需要重新计算元素的几何属性，将其安放在界面中的正确位置，这个过程叫做重排</p><h3 id="【补充】模块化与组件化" tabindex="-1">【补充】模块化与组件化 <a class="header-anchor" href="#【补充】模块化与组件化" aria-hidden="true">#</a></h3><ul><li><p>模块</p><ol><li>理解：向外提供特定功能的js程序, 一般就是一个js文件</li><li>为什么要拆成模块：随着业务逻辑增加，代码越来越多且复杂。</li><li>作用：复用js, 简化js的编写, 提高js运行效率</li></ol></li><li><p>组件</p><ol><li>理解：用来实现局部功能效果的代码和资源的集合(html/css/js/image等等)</li><li>为什么要用组件： 一个界面的功能更复杂</li><li>作用：复用编码, 简化项目编码, 提高运行效率</li></ol></li></ul><p><strong>模块化</strong>：当应用的js都以模块来编写的, 这个应用就是一个模块化的应用</p><p><strong>组件化</strong>：当应用是以多组件的方式实现, 这个应用就是一个组件化的应用</p><h2 id="_1-3-react的特点" tabindex="-1">1.3 React的特点 <a class="header-anchor" href="#_1-3-react的特点" aria-hidden="true">#</a></h2><ol><li>采用<strong>组件化模式</strong>、<strong>声明式编码</strong>，提高开发效率及组件复用率</li><li>在 React Native中可以使用React语法进行<strong>移动端开发</strong></li><li>使用<strong>虚拟DOM</strong>+<strong>Diff算法</strong>，尽量减少与真实DOM的交互</li></ol><h2 id="_1-4-react高效的原因" tabindex="-1">1.4. React高效的原因 <a class="header-anchor" href="#_1-4-react高效的原因" aria-hidden="true">#</a></h2><ol><li>使用虚拟(virtual)DOM, 不总是直接操作页面真实DOM。</li><li>DOM Diffing算法, 最小化页面重绘。</li></ol><h1 id="_2-hello-react" tabindex="-1">2. Hello React <a class="header-anchor" href="#_2-hello-react" aria-hidden="true">#</a></h1><h2 id="_2-1-相关库介绍" tabindex="-1">2.1 相关库介绍 <a class="header-anchor" href="#_2-1-相关库介绍" aria-hidden="true">#</a></h2><ul><li>旧版本 16.8.4 (March 5, 2019)</li><li>新版本 有不一样的会说明</li></ul><ol><li>react.js：React核心库。</li><li>react-dom.js：提供操作DOM的React扩展库。</li><li>babel.min.js：解析JSX语法代码转为JS代码的库。</li></ol><h3 id="【补充】babel-js的作用" tabindex="-1">【补充】babel.js的作用 <a class="header-anchor" href="#【补充】babel-js的作用" aria-hidden="true">#</a></h3><ol><li>浏览器不能直接解析JSX代码, 需要babel转译为纯JS的代码才能运行</li><li>只要用了JSX，都要加上<code>type=&quot;text/babel&quot;</code>, 声明需要babel来处理</li></ol><h2 id="_2-2-使用jsx创建虚拟dom" tabindex="-1">2.2 使用JSX创建虚拟DOM <a class="header-anchor" href="#_2-2-使用jsx创建虚拟dom" aria-hidden="true">#</a></h2><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> VDOM </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Hello,React</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-3-渲染虚拟dom-元素" tabindex="-1">2.3 渲染虚拟DOM(元素) <a class="header-anchor" href="#_2-3-渲染虚拟dom-元素" aria-hidden="true">#</a></h2><ol><li>语法: <code>ReactDOM.render(virtualDOM, containerDOM)</code></li><li>作用: 将虚拟DOM元素渲染到页面中的真实容器DOM中显示</li><li>参数说明 <ol><li>参数一: 纯js或jsx创建的虚拟dom对象</li><li>参数二: 用来包含虚拟DOM元素的真实dom元素对象(一般是一个div)</li></ol></li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">en</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">charset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTF-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">hello_react</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 准备好一个“容器” --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 引入react核心库 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../js/react.development.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 引入react-dom，用于支持react操作DOM --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../js/react-dom.development.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 引入babel，用于将jsx转为js --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../js/babel.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/babel</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 此处一定要写babel */</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//1.创建虚拟DOM</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> VDOM </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Hello,React</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 此处一定不要写引号，因为不是字符串 */</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//2.渲染虚拟DOM到页面</span></span>
<span class="line"><span style="color:#A6ACCD;">    ReactDOM</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(VDOM</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="_2-4-页面显示" tabindex="-1">2.4 页面显示 <a class="header-anchor" href="#_2-4-页面显示" aria-hidden="true">#</a></h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/15326fdde62c48f6aaa9f40dd9641cff~tplv-k3u1fbpfcp-zoom-1.image" alt="在这里插入图片描述"></p><h1 id="_3-创建虚拟dom的两种方式" tabindex="-1">3. 创建虚拟DOM的两种方式 <a class="header-anchor" href="#_3-创建虚拟dom的两种方式" aria-hidden="true">#</a></h1><h2 id="_3-1-纯js方式-一般不用" tabindex="-1">3.1 纯JS方式(一般不用) <a class="header-anchor" href="#_3-1-纯js方式-一般不用" aria-hidden="true">#</a></h2><p><code>React.createElement</code>的语法</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">React</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  type</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [props]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">children]</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../js/react.development.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../js/react-dom.development.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//1.创建虚拟DOM</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> VDOM </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> React</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">h1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,{</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">React</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">span</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,{},</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello,React</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//2.渲染虚拟DOM到页面</span></span>
<span class="line"><span style="color:#A6ACCD;">  ReactDOM</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(VDOM</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_3-2-jsx方式" tabindex="-1">3.2 JSX方式 <a class="header-anchor" href="#_3-2-jsx方式" aria-hidden="true">#</a></h2><blockquote><p>JSX方式就是js创建虚拟DOM的语法糖</p></blockquote><blockquote><p>在编译之后，JSX 表达式会被转为普通 JavaScript 函数调用，并且对其取值后得到 JavaScript 对象。</p></blockquote><blockquote><p>可以在 if 语句和 for 循环的代码块中使用 JSX，将 JSX 赋值给变量，把 JSX 当作参数传入，以及从函数中返回 JSX</p></blockquote><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../js/react.development.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../js/react-dom.development.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../js/babel.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/babel</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 此处一定要写babel */</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//1.创建虚拟DOM</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> VDOM </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (  </span><span style="color:#676E95;font-style:italic;">/* 此处一定不要写引号，因为不是字符串 */</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Hello,React</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    )</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//2.渲染虚拟DOM到页面</span></span>
<span class="line"><span style="color:#A6ACCD;">    ReactDOM</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(VDOM</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cf6745a3c4c543e39e6328930178a223~tplv-k3u1fbpfcp-zoom-1.image" alt="在这里插入图片描述"></p><h1 id="_4-虚拟dom与真实dom" tabindex="-1">4. 虚拟DOM与真实DOM <a class="header-anchor" href="#_4-虚拟dom与真实dom" aria-hidden="true">#</a></h1><p>打印输出虚拟DOM和真实DOM进行比较</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> VDOM </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (  </span><span style="color:#676E95;font-style:italic;">/* 此处一定不要写引号，因为不是字符串 */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Hello,React</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//2. 渲染虚拟DOM到页面</span></span>
<span class="line"><span style="color:#A6ACCD;">ReactDOM</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(VDOM</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> TDOM </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">虚拟DOM</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">VDOM)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">真实DOM</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">TDOM)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">debugger</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85719eba32c2439e920784a3f7d86d68~tplv-k3u1fbpfcp-zoom-1.image" alt="在这里插入图片描述"></p><p>看看虚拟DOM身上有哪些属性 <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8e5bb24890b74ddeb8bc19e9d87b50d8~tplv-k3u1fbpfcp-zoom-1.image" alt="在这里插入图片描述"></p><p>看看真实DOM身上有哪些属性 <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ad2d870967b54c1e9a2a01ac7bd0c59e~tplv-k3u1fbpfcp-zoom-1.image" alt="在这里插入图片描述"></p><ol><li>虚拟<code>DOM</code>本质是<code>Object</code>类型的对象（一般对象）</li><li>虚拟<code>DOM</code>比较 “<strong>轻</strong>”，真实<code>DOM</code>比较 “<strong>重</strong>”，因为虚拟<code>DOM</code>是<code>React</code>内部在用，无需真实<code>DOM</code>上那么多的属性</li><li>虚拟<code>DOM</code>最终会被<code>React</code>转化为真实<code>DOM</code>，呈现在页面上</li></ol><h1 id="_5-jsx入门" tabindex="-1">5. JSX入门 <a class="header-anchor" href="#_5-jsx入门" aria-hidden="true">#</a></h1><h2 id="_5-1-概述" tabindex="-1">5.1 概述 <a class="header-anchor" href="#_5-1-概述" aria-hidden="true">#</a></h2><ol><li>全称: <code>JavaScript XML</code></li><li>React定义的一种类似于XML的JS扩展语法: JS + XML本质是<code>React.createElement(component, props, ...children)</code>方法的语法糖</li><li>作用: 用来简化创建虚拟DOM <ol><li>写法：<code>var ele = &lt;h1&gt;Hello JSX!&lt;/h1&gt;</code></li><li>注意1：它不是字符串, 也不是HTML/XML标签</li><li>注意2：它最终产生的就是一个JS对象</li></ol></li><li>标签名任意: HTML标签或其它标签</li><li>标签属性任意: HTML标签属性或其它</li></ol><h2 id="_5-2-基本语法规则" tabindex="-1">5.2 基本语法规则 <a class="header-anchor" href="#_5-2-基本语法规则" aria-hidden="true">#</a></h2><ol><li>定义虚拟DOM时，不要写引号。</li><li>标签中混入<strong>JS表达式时</strong>要用 <code>{ }</code>。</li><li>样式的类名指定不要用 class，要用 <code>className</code>。（因为class是ES6中类的关键字，所以不让用）</li><li>内联样式，要用 style = /{/{ key: value /}/} 的形式去写。</li><li>只有一个根标签</li><li>标签必须闭合</li><li>标签首字母 <ol><li>若<strong>小写字母</strong>开头，则将该标签转为<code>html</code>中同名元素，若<code>html</code>中无该标签对应的同名元素，则报错。</li><li>若<strong>大写字母</strong>开头，<code>React</code>就去渲染对应的组件，若组件没有定义，则报错。</li></ol></li></ol><h3 id="【补充】-区分js表达式与js语句" tabindex="-1">【补充】 区分js表达式与js语句 <a class="header-anchor" href="#【补充】-区分js表达式与js语句" aria-hidden="true">#</a></h3><ol><li><p>表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方，下面这些都是表达式：</p><ol><li><p><code>a</code></p></li><li><p><code>a+b</code></p></li><li><p><code>demo(1) // 函数调用表达式</code></p></li><li><p><code>arr.map()</code></p></li><li><p><code>function test () {}</code></p></li></ol></li><li><p>语句(代码)，下面这些都是语句(代码)：【控制语句，控制代码走向，而不是产生值】</p><ol><li><p><code>if(){ }</code></p></li><li><p><code>for(){ }</code></p></li><li><p><code>switch( ){case:xxxx}</code></p></li></ol></li></ol><h2 id="_5-3-总结" tabindex="-1">5.3 总结 <a class="header-anchor" href="#_5-3-总结" aria-hidden="true">#</a></h2><ol><li><p>遇到 <code>&lt;</code> 开头的代码, 以标签的语法解析: html同名标签转换为html同名元素, 其它标签需要特别解析</p></li><li><p>遇到以 <code>{</code> 开头的代码，以JS语法解析: 标签中的js表达式必须用<code>{ }</code>包含</p></li></ol><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,59);function h(A,m,g,_,E,j){const n=t,l=e,p=o;return r(),D("div",null,[d,b,u,a(n,{readTime:"7",words:"2.1k"}),C,a(l),a(p)])}const q=c(y,[["render",h]]);export{x as __pageData,q as default};
