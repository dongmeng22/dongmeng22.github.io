import{_ as i,a as t}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.2d10c1d4.js";import{_ as p}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.63457685.js";import{_ as r,o as c,c as o,D as s,x as a,a as d,Q as h}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const B=JSON.parse('{"title":"1. 为什么需要","description":"","frontmatter":{},"headers":[{"level":3,"title":"定位 = 定位模式 + 边偏移","slug":"定位-定位模式-边偏移","link":"#定位-定位模式-边偏移","children":[]},{"level":2,"title":"2.1 定位模式","slug":"_2-1-定位模式","link":"#_2-1-定位模式","children":[]},{"level":2,"title":"2.2边偏移","slug":"_2-2边偏移","link":"#_2-2边偏移","children":[]},{"level":2,"title":"子级使用绝对定位，父级则需要相对定位","slug":"子级使用绝对定位-父级则需要相对定位","link":"#子级使用绝对定位-父级则需要相对定位","children":[{"level":4,"title":"相对定位经常用来作为绝对定位的父级","slug":"相对定位经常用来作为绝对定位的父级","link":"#相对定位经常用来作为绝对定位的父级","children":[]},{"level":4,"title":"因为父级需要占有位置，因此是相对定位，子盒子不需要占有位置，则是绝对定位","slug":"因为父级需要占有位置-因此是相对定位-子盒子不需要占有位置-则是绝对定位","link":"#因为父级需要占有位置-因此是相对定位-子盒子不需要占有位置-则是绝对定位","children":[]},{"level":4,"title":"子绝父相不是永远不变的，如果父元素不需要占有位置，子绝父绝也会遇到","slug":"子绝父相不是永远不变的-如果父元素不需要占有位置-子绝父绝也会遇到","link":"#子绝父相不是永远不变的-如果父元素不需要占有位置-子绝父绝也会遇到","children":[]},{"level":3,"title":"小技巧：固定版心右侧位置","slug":"小技巧-固定版心右侧位置","link":"#小技巧-固定版心右侧位置","children":[]},{"level":3,"title":"10.1 绝对定位的盒子居中","slug":"_10-1-绝对定位的盒子居中","link":"#_10-1-绝对定位的盒子居中","children":[]},{"level":3,"title":"10.2 定位特殊特性","slug":"_10-2-定位特殊特性","link":"#_10-2-定位特殊特性","children":[]},{"level":3,"title":"10.3 脱标的盒子不会触发外边距塌陷","slug":"_10-3-脱标的盒子不会触发外边距塌陷","link":"#_10-3-脱标的盒子不会触发外边距塌陷","children":[]},{"level":3,"title":"10.4 绝对定位（固定定位）会完全压住盒子","slug":"_10-4-绝对定位-固定定位-会完全压住盒子","link":"#_10-4-绝对定位-固定定位-会完全压住盒子","children":[]}]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"basics/css/05定位.md","lastUpdated":1678883566000}'),u={name:"basics/css/05定位.md"},b=a("h1",{id:"_1-为什么需要",tabindex:"-1"},[d("1. 为什么需要 "),a("a",{class:"header-anchor",href:"#_1-为什么需要","aria-hidden":"true"},"#")],-1),y=h(`<p>标准流和浮动无法做到：</p><ul><li>某个元素可以自由的在一个盒子内移动位置，并且压住其他盒子</li><li>滚动窗口时，盒子固定在屏幕的某个位置</li></ul><h1 id="_2-定位组成" tabindex="-1">2. 定位组成 <a class="header-anchor" href="#_2-定位组成" aria-hidden="true">#</a></h1><p>将盒子==定==在某一==位==置，所以定位也是在摆放盒子，按照定位的方式移动盒子。</p><h3 id="定位-定位模式-边偏移" tabindex="-1">定位 = 定位模式 + 边偏移 <a class="header-anchor" href="#定位-定位模式-边偏移" aria-hidden="true">#</a></h3><h2 id="_2-1-定位模式" tabindex="-1">2.1 定位模式 <a class="header-anchor" href="#_2-1-定位模式" aria-hidden="true">#</a></h2><p>用于指定一个元素在文档中的定位方式 通过CSS的position属性设置</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">position: static;   </span><span style="color:#676E95;font-style:italic;">/*静态定位*/</span></span>
<span class="line"><span style="color:#A6ACCD;">position: relative; </span><span style="color:#676E95;font-style:italic;">/*相对定位*/</span></span>
<span class="line"><span style="color:#A6ACCD;">position: absolute; </span><span style="color:#676E95;font-style:italic;">/*绝对定位*/</span></span>
<span class="line"><span style="color:#A6ACCD;">position: fixed;    </span><span style="color:#676E95;font-style:italic;">/*固定定位*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_2-2边偏移" tabindex="-1">2.2边偏移 <a class="header-anchor" href="#_2-2边偏移" aria-hidden="true">#</a></h2><p>决定了该元素的最终位置</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">top: 80px;    </span><span style="color:#676E95;font-style:italic;">/*顶端偏移量，定义元素相对于其父元素上边线的距离*/</span></span>
<span class="line"><span style="color:#A6ACCD;">bottom: 80px; </span><span style="color:#676E95;font-style:italic;">/*底部偏移量，定义元素相对于其父元素下边线的距离*/</span></span>
<span class="line"><span style="color:#A6ACCD;">left: 80px;   </span><span style="color:#676E95;font-style:italic;">/*左侧偏移量，定义元素相对于其父元素左边线的距离*/</span></span>
<span class="line"><span style="color:#A6ACCD;">right: 80px;  </span><span style="color:#676E95;font-style:italic;">/*右侧偏移量，定义元素相对于其父元素右边线的距离*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h1 id="_3-静态定位-static-了解" tabindex="-1">3. 静态定位 static （了解） <a class="header-anchor" href="#_3-静态定位-static-了解" aria-hidden="true">#</a></h1><p>默认定位方式，无定位的意思</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">选择器 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> static</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>按照标准流特性摆放位置，没有边偏移</li><li>在布局中很少使用</li></ul><h1 id="_4-相对定位-relative-重要" tabindex="-1">4. 相对定位 relative （重要） <a class="header-anchor" href="#_4-相对定位-relative-重要" aria-hidden="true">#</a></h1><p>元素在移动位置的时候，是相对于它==原来位置==来说的。</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">选择器 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>移动位置时照点是自己原来的位置</li><li>原来在标准流的位置继续占有，后面的盒子仍然以标准流的方式对待它。（不脱标，继续保留原来位置）</li></ul><h1 id="_5-绝对定位-absolute-重要" tabindex="-1">5. 绝对定位 absolute （重要） <a class="header-anchor" href="#_5-绝对定位-absolute-重要" aria-hidden="true">#</a></h1><p>元素在移动位置时，相对于它==祖先元素==来说的</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">选择器 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位（Document文档）</li><li>如果祖先元素有定位（相对，绝对，固定），则以最近一级的有定位祖先元素为参考点移动位置</li><li>绝对定位不再占有原先的位置（脱标）</li></ul><h1 id="_6-子绝父相的由来" tabindex="-1">6. 子绝父相的由来 <a class="header-anchor" href="#_6-子绝父相的由来" aria-hidden="true">#</a></h1><p>问题</p><ul><li>绝对定位和相对定位到底有什么使用场景？</li><li>为什么说相对定位给绝对定位当爹的呢？</li></ul><h2 id="子级使用绝对定位-父级则需要相对定位" tabindex="-1">子级使用绝对定位，父级则需要相对定位 <a class="header-anchor" href="#子级使用绝对定位-父级则需要相对定位" aria-hidden="true">#</a></h2><ul><li>子级绝对定位，不会占用位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子</li><li>父盒子需要加定位限制子盒子在父盒子内显示</li><li>父盒子布局时，需要占有位置，因此父亲只能是相对定位</li></ul><h4 id="相对定位经常用来作为绝对定位的父级" tabindex="-1">相对定位经常用来作为绝对定位的父级 <a class="header-anchor" href="#相对定位经常用来作为绝对定位的父级" aria-hidden="true">#</a></h4><h4 id="因为父级需要占有位置-因此是相对定位-子盒子不需要占有位置-则是绝对定位" tabindex="-1">因为父级需要占有位置，因此是相对定位，子盒子不需要占有位置，则是绝对定位 <a class="header-anchor" href="#因为父级需要占有位置-因此是相对定位-子盒子不需要占有位置-则是绝对定位" aria-hidden="true">#</a></h4><h4 id="子绝父相不是永远不变的-如果父元素不需要占有位置-子绝父绝也会遇到" tabindex="-1">子绝父相不是永远不变的，如果父元素不需要占有位置，子绝父绝也会遇到 <a class="header-anchor" href="#子绝父相不是永远不变的-如果父元素不需要占有位置-子绝父绝也会遇到" aria-hidden="true">#</a></h4><h1 id="_6-固定定位-fixed-重要" tabindex="-1">6. 固定定位 fixed （重要） <a class="header-anchor" href="#_6-固定定位-fixed-重要" aria-hidden="true">#</a></h1><p>元素固定于浏览器可视区的位置<br> 主要使用场景：可以在浏览器页面滚动时元素的位置不会改变</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">选择器 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> fixed</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>以浏览器的可视窗口为参照点移动元素</li><li>跟父元素没有任何关系</li><li>不随滚动条滚动</li><li>固定定位不占有原先的位置</li></ul><p>固定定位也是脱标的，其实固定定位也可以看做是一种特殊的绝对定位</p><h3 id="小技巧-固定版心右侧位置" tabindex="-1">小技巧：固定版心右侧位置 <a class="header-anchor" href="#小技巧-固定版心右侧位置" aria-hidden="true">#</a></h3><ol><li>让固定定位的盒子left: 50%; 走到浏览器可视区（也可以看做版心）的一半位置</li><li>让固定定位的盒子margin-left: 版心宽度的一半距离; 多走版心宽度的一半位置</li></ol><h1 id="_7-粘性定位-sticky-了解" tabindex="-1">7. 粘性定位 sticky （了解） <a class="header-anchor" href="#_7-粘性定位-sticky-了解" aria-hidden="true">#</a></h1><p>可以被认为是相对定位和固定定位的混合</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">选择器 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> sticky</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>以浏览器的可视窗口为参照点移动元素（固定定位特点）</li><li>占有原先位置 （相对定位）</li><li>必须添加top、left、right、bottom其中一个才有效</li><li>跟页面滚动搭配使用。兼容性较差 IE不支持</li></ul><h1 id="_8-总结" tabindex="-1">8. 总结 <a class="header-anchor" href="#_8-总结" aria-hidden="true">#</a></h1><table><thead><tr><th>定位模式</th><th>是否脱标</th><th>移动位置</th><th>是否常用</th></tr></thead><tbody><tr><td>静态定位static</td><td>否</td><td>不能使用边偏移</td><td>很少</td></tr><tr><td>相对定位relative</td><td>否（占有位置）</td><td>相对于自身位置偏移</td><td>常用</td></tr><tr><td>绝对定位absolute</td><td>是（不占有位置）</td><td>带有定位的父级</td><td>常用</td></tr><tr><td>固定定位fixed</td><td>是（不占有位置）</td><td>浏览器可视区</td><td>常用</td></tr><tr><td>粘性定位sticky</td><td>否（占有位置）</td><td>浏览器可视区</td><td>当前阶段少</td></tr></tbody></table><h1 id="_9-定位叠放次序-z-index" tabindex="-1">9. 定位叠放次序 z-index <a class="header-anchor" href="#_9-定位叠放次序-z-index" aria-hidden="true">#</a></h1><p>使用定位布局时，可能会出现盒子重叠的情况。此时，可以使用z-index来控制盒子的前后次序（z轴）</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">选择器 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">z-index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>数值可以正整数、负整数、0， 默认为auto， 数值越大，盒子越靠上</li><li>如果属性值相同，则按照书写顺序，后来居上</li><li>数字后面不能加单位</li><li>只有定位的盒子才有z-index属性</li></ul><h1 id="_10-定位的拓展" tabindex="-1">10. 定位的拓展 <a class="header-anchor" href="#_10-定位的拓展" aria-hidden="true">#</a></h1><h3 id="_10-1-绝对定位的盒子居中" tabindex="-1">10.1 绝对定位的盒子居中 <a class="header-anchor" href="#_10-1-绝对定位的盒子居中" aria-hidden="true">#</a></h3><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">left: 50%; 让盒子的左侧移动到父级元素的水平中心位置</span></span>
<span class="line"><span style="color:#FFCB6B;">margin-left</span><span style="color:#A6ACCD;">:-100px; </span><span style="color:#676E95;font-style:italic;">/*让盒子向左移动自身宽度的一半*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_10-2-定位特殊特性" tabindex="-1">10.2 定位特殊特性 <a class="header-anchor" href="#_10-2-定位特殊特性" aria-hidden="true">#</a></h3><ul><li>行内元素添加绝对或固定定位，可以直接设置高度和宽度</li><li>块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小</li></ul><h3 id="_10-3-脱标的盒子不会触发外边距塌陷" tabindex="-1">10.3 脱标的盒子不会触发外边距塌陷 <a class="header-anchor" href="#_10-3-脱标的盒子不会触发外边距塌陷" aria-hidden="true">#</a></h3><p>浮动元素、绝对定位（固定定位）元素的都不会出发外边距合并的问题</p><h3 id="_10-4-绝对定位-固定定位-会完全压住盒子" tabindex="-1">10.4 绝对定位（固定定位）会完全压住盒子 <a class="header-anchor" href="#_10-4-绝对定位-固定定位-会完全压住盒子" aria-hidden="true">#</a></h3><ul><li>浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）</li><li>绝对定位（固定定位）会压住下面标准流的所有内容</li><li>浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。文字会围绕浮动元素</li></ul><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,58);function C(m,D,_,A,f,v){const n=p,e=i,l=t;return c(),o("div",null,[b,s(n,{readTime:"4",words:"1.6k"}),y,s(e),s(l)])}const E=r(u,[["render",C]]);export{B as __pageData,E as default};
