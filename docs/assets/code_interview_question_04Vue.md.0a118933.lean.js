import{_ as o,a as t}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.3dcd3b9e.js";import{_ as r}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.358bd1c3.js";import{_ as c,o as i,c as F,D as a,x as s,a as n,Q as D}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const q=JSON.parse('{"title":"1. 基础知识","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.1 指令","slug":"_1-1-指令","link":"#_1-1-指令","children":[]},{"level":2,"title":"1.2 v-if与v-show 显式","slug":"_1-2-v-if与v-show-显式","link":"#_1-2-v-if与v-show-显式","children":[]},{"level":2,"title":"1.3 v-for 遍历","slug":"_1-3-v-for-遍历","link":"#_1-3-v-for-遍历","children":[]},{"level":2,"title":"1.4 v-if与v-for不能同时用","slug":"_1-4-v-if与v-for不能同时用","link":"#_1-4-v-if与v-for不能同时用","children":[]},{"level":2,"title":"1.5 data、计算属性、方法","slug":"_1-5-data、计算属性、方法","link":"#_1-5-data、计算属性、方法","children":[]},{"level":2,"title":"1.6 计算属性与方法","slug":"_1-6-计算属性与方法","link":"#_1-6-计算属性与方法","children":[]},{"level":2,"title":"1.7 方法中的this","slug":"_1-7-方法中的this","link":"#_1-7-方法中的this","children":[]},{"level":2,"title":"1.8 事件对象","slug":"_1-8-事件对象","link":"#_1-8-事件对象","children":[]},{"level":2,"title":"1.9 事件修饰符","slug":"_1-9-事件修饰符","link":"#_1-9-事件修饰符","children":[]},{"level":2,"title":"1.10 侦听器 watch","slug":"_1-10-侦听器-watch","link":"#_1-10-侦听器-watch","children":[]},{"level":2,"title":"1.11 动态绑定class、style","slug":"_1-11-动态绑定class、style","link":"#_1-11-动态绑定class、style","children":[{"level":3,"title":"1. 类名class","slug":"_1-类名class","link":"#_1-类名class","children":[]},{"level":3,"title":"2. 内联样式style","slug":"_2-内联样式style","link":"#_2-内联样式style","children":[]}]},{"level":2,"title":"1.12 过滤器","slug":"_1-12-过滤器","link":"#_1-12-过滤器","children":[]},{"level":2,"title":"1.13 v-clock","slug":"_1-13-v-clock","link":"#_1-13-v-clock","children":[]},{"level":2,"title":"1.14 生命周期钩子","slug":"_1-14-生命周期钩子","link":"#_1-14-生命周期钩子","children":[]},{"level":2,"title":"1.15 什么是nextTick","slug":"_1-15-什么是nexttick","link":"#_1-15-什么是nexttick","children":[]},{"level":2,"title":"1.16 自定义实现v-model","slug":"_1-16-自定义实现v-model","link":"#_1-16-自定义实现v-model","children":[]},{"level":2,"title":"1.17 MVVM 模型","slug":"_1-17-mvvm-模型","link":"#_1-17-mvvm-模型","children":[]},{"level":2,"title":"2.1 data为什么是函数","slug":"_2-1-data为什么是函数","link":"#_2-1-data为什么是函数","children":[]},{"level":2,"title":"2.2 组件间通信","slug":"_2-2-组件间通信","link":"#_2-2-组件间通信","children":[{"level":3,"title":"2.2.1 props  父 —> 子","slug":"_2-2-1-props-父-—-子","link":"#_2-2-1-props-父-—-子","children":[]},{"level":3,"title":"2.2.2 $emit  子 —> 父 + 自定义事件","slug":"_2-2-2-emit-子-—-父-自定义事件","link":"#_2-2-2-emit-子-—-父-自定义事件","children":[]},{"level":3,"title":"2.2.3 EventBus事件总线 .$emit .$on","slug":"_2-2-3-eventbus事件总线-emit-on","link":"#_2-2-3-eventbus事件总线-emit-on","children":[]},{"level":3,"title":"2.2.4 PubSubJS发布订阅","slug":"_2-2-4-pubsubjs发布订阅","link":"#_2-2-4-pubsubjs发布订阅","children":[]},{"level":3,"title":"2.2.5 作用域插槽","slug":"_2-2-5-作用域插槽","link":"#_2-2-5-作用域插槽","children":[]}]},{"level":2,"title":"2.3 slot插槽","slug":"_2-3-slot插槽","link":"#_2-3-slot插槽","children":[{"level":3,"title":"2.3.1 匿名slot","slug":"_2-3-1-匿名slot","link":"#_2-3-1-匿名slot","children":[]},{"level":3,"title":"2.3.2 具名slot","slug":"_2-3-2-具名slot","link":"#_2-3-2-具名slot","children":[]},{"level":3,"title":"2.3.3 作用域插槽","slug":"_2-3-3-作用域插槽","link":"#_2-3-3-作用域插槽","children":[]}]},{"level":2,"title":"2.4 动态组件","slug":"_2-4-动态组件","link":"#_2-4-动态组件","children":[]},{"level":2,"title":"2.5 异步组件","slug":"_2-5-异步组件","link":"#_2-5-异步组件","children":[]},{"level":2,"title":"2.6 keep-alive实现组件缓存","slug":"_2-6-keep-alive实现组件缓存","link":"#_2-6-keep-alive实现组件缓存","children":[]},{"level":2,"title":"2.7 mixin 抽离组件公共部分","slug":"_2-7-mixin-抽离组件公共部分","link":"#_2-7-mixin-抽离组件公共部分","children":[]},{"level":2,"title":"3.1 vue-cli","slug":"_3-1-vue-cli","link":"#_3-1-vue-cli","children":[]},{"level":2,"title":"3.2 vue-router","slug":"_3-2-vue-router","link":"#_3-2-vue-router","children":[{"level":3,"title":"3.2.1 路由的概念","slug":"_3-2-1-路由的概念","link":"#_3-2-1-路由的概念","children":[]},{"level":3,"title":"3.3.2 基本路由","slug":"_3-3-2-基本路由","link":"#_3-3-2-基本路由","children":[]},{"level":3,"title":"3.3.3 嵌套路由","slug":"_3-3-3-嵌套路由","link":"#_3-3-3-嵌套路由","children":[]},{"level":3,"title":"3.3.4 动态路由匹配","slug":"_3-3-4-动态路由匹配","link":"#_3-3-4-动态路由匹配","children":[]},{"level":3,"title":"3.3.5 向路由组件传递数据","slug":"_3-3-5-向路由组件传递数据","link":"#_3-3-5-向路由组件传递数据","children":[]},{"level":3,"title":"3.3.6 命名路由","slug":"_3-3-6-命名路由","link":"#_3-3-6-命名路由","children":[]},{"level":3,"title":"3.3.7 编程式路由导航","slug":"_3-3-7-编程式路由导航","link":"#_3-3-7-编程式路由导航","children":[]}]},{"level":2,"title":"3.4 vuex","slug":"_3-4-vuex","link":"#_3-4-vuex","children":[{"level":3,"title":"3.4.1 概念","slug":"_3-4-1-概念","link":"#_3-4-1-概念","children":[]},{"level":3,"title":"3.4.2 组件中访问state的方式","slug":"_3-4-2-组件中访问state的方式","link":"#_3-4-2-组件中访问state的方式","children":[]},{"level":3,"title":"3.4.3 组件中触发Mutation的方式","slug":"_3-4-3-组件中触发mutation的方式","link":"#_3-4-3-组件中触发mutation的方式","children":[{"level":4,"title":"需要传多个参数的情况","slug":"需要传多个参数的情况","link":"#需要传多个参数的情况","children":[]}]},{"level":3,"title":"3.3.4 组件中触发getter的方式","slug":"_3-3-4-组件中触发getter的方式","link":"#_3-3-4-组件中触发getter的方式","children":[]},{"level":3,"title":"3.3.5 组件中触发actions的方式","slug":"_3-3-5-组件中触发actions的方式","link":"#_3-3-5-组件中触发actions的方式","children":[]}]},{"level":2,"title":"4.1 模板引擎","slug":"_4-1-模板引擎","link":"#_4-1-模板引擎","children":[]},{"level":2,"title":"4.2 数据响应式原理","slug":"_4-2-数据响应式原理","link":"#_4-2-数据响应式原理","children":[{"level":3,"title":"1. Object.defineProperty的缺点","slug":"_1-object-defineproperty的缺点","link":"#_1-object-defineproperty的缺点","children":[]},{"level":3,"title":"2. 数据更新了但是页面没有变化，为什么？怎么解决","slug":"_2-数据更新了但是页面没有变化-为什么-怎么解决","link":"#_2-数据更新了但是页面没有变化-为什么-怎么解决","children":[]}]},{"level":2,"title":"4.3 虚拟DOM","slug":"_4-3-虚拟dom","link":"#_4-3-虚拟dom","children":[]},{"level":2,"title":"4.4 diff算法","slug":"_4-4-diff算法","link":"#_4-4-diff算法","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"code/interview/question/04Vue.md","lastUpdated":null}'),y={name:"code/interview/question/04Vue.md"},d=s("blockquote",null,[s("p",null,"本来是想总结一些面试题，这一总结起来，直接又重新学了一遍Vue 就当作复习Vue用的，总结了一些基础知识也有一些面试题 持续更新...........")],-1),u=s("h1",{id:"_1-基础知识",tabindex:"-1"},[n("1. 基础知识 "),s("a",{class:"header-anchor",href:"#_1-基础知识","aria-hidden":"true"},"#")],-1),b=s("h2",{id:"_1-1-指令",tabindex:"-1"},[n("1.1 指令 "),s("a",{class:"header-anchor",href:"#_1-1-指令","aria-hidden":"true"},"#")],-1),C=s("p",{"display:":"",none:""},[s("code",null,"v-text"),n(" : 更新元素的 textContent "),s("code",null,"v-html"),n(" : 更新元素的 innerHTML "),s("code",null,"v-if"),n(" : 如果为true, 当前标签才会输出到页面 "),s("code",null,"v-else"),n(": 如果为false, 当前标签才会输出到页面 "),s("code",null,"v-show"),n(" : 通过控制display样式来控制显示/隐藏 "),s("code",null,"v-for"),n(" : 遍历数组/对象 "),s("code",null,"v-on"),n(" : 绑定事件监听, 一般简写为@ "),s("code",null,"v-bind"),n(" : 强制绑定解析表达式, 可以省略v-bind "),s("code",null,"v-model"),n(" : 双向数据绑定 "),s("code",null,"ref"),n(" : 为某个元素注册一个唯一标识, vue对象通过$refs属性访问这个元素对象 "),s("code",null,"v-cloak"),n(" : 使用它防止闪现表达式, 与css配合: [v-cloak]")],-1),A=D("",296);function m(h,v,g,f,_,k){const l=r,p=o,e=t;return i(),F("div",null,[d,u,a(l,{readTime:"23",words:"6k"}),b,C,A,a(p),a(e)])}const V=c(y,[["render",m]]);export{q as __pageData,V as default};
