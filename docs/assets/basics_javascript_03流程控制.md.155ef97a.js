import{_ as p,a as i}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.2d10c1d4.js";import{_ as r}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.63457685.js";import{_ as o,o as t,c,D as s,x as a,a as d,Q as h}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const x=JSON.parse('{"title":"1. 运算符","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.1 算数运算符","slug":"_1-1-算数运算符","link":"#_1-1-算数运算符","children":[]},{"level":2,"title":"1.2 一元运算符","slug":"_1-2-一元运算符","link":"#_1-2-一元运算符","children":[{"level":3,"title":"1.2.1 一元的+","slug":"_1-2-1-一元的","link":"#_1-2-1-一元的","children":[]},{"level":3,"title":"1.2.2 一元的-","slug":"_1-2-2-一元的","link":"#_1-2-2-一元的","children":[]},{"level":3,"title":"1.2.3 自增","slug":"_1-2-3-自增","link":"#_1-2-3-自增","children":[]},{"level":3,"title":"1.2.4自减","slug":"_1-2-4自减","link":"#_1-2-4自减","children":[]}]},{"level":2,"title":"1.3 逻辑运算符","slug":"_1-3-逻辑运算符","link":"#_1-3-逻辑运算符","children":[{"level":3,"title":"1.3.1 ! 非","slug":"_1-3-1-非","link":"#_1-3-1-非","children":[]},{"level":3,"title":"1.3.2 && 与","slug":"_1-3-2-与","link":"#_1-3-2-与","children":[]},{"level":3,"title":"1.3.3 || 或","slug":"_1-3-3-或","link":"#_1-3-3-或","children":[]}]},{"level":2,"title":"1.4 赋值运算符","slug":"_1-4-赋值运算符","link":"#_1-4-赋值运算符","children":[]},{"level":2,"title":"1.5 关系运算符 > < >= <=","slug":"_1-5-关系运算符","link":"#_1-5-关系运算符","children":[]},{"level":2,"title":"1.6 相等运算符","slug":"_1-6-相等运算符","link":"#_1-6-相等运算符","children":[{"level":3,"title":"1.6.1 == 相等","slug":"_1-6-1-相等","link":"#_1-6-1-相等","children":[]},{"level":3,"title":"1.6.2 !=不等","slug":"_1-6-2-不等","link":"#_1-6-2-不等","children":[]},{"level":3,"title":"1.6.3 ===全等","slug":"_1-6-3-全等","link":"#_1-6-3-全等","children":[]},{"level":3,"title":"1.6.4 !==不全等","slug":"_1-6-4-不全等","link":"#_1-6-4-不全等","children":[]}]},{"level":2,"title":"1.7 特殊的值：","slug":"_1-7-特殊的值","link":"#_1-7-特殊的值","children":[{"level":3,"title":"1.7.1 null和undefined","slug":"_1-7-1-null和undefined","link":"#_1-7-1-null和undefined","children":[]},{"level":3,"title":"1.7.2 NaN","slug":"_1-7-2-nan","link":"#_1-7-2-nan","children":[]}]},{"level":2,"title":"1.8三元运算符 ?:","slug":"_1-8三元运算符","link":"#_1-8三元运算符","children":[]},{"level":2,"title":"1.9 优先级","slug":"_1-9-优先级","link":"#_1-9-优先级","children":[]},{"level":2,"title":"2.1 条件判断语句if语句","slug":"_2-1-条件判断语句if语句","link":"#_2-1-条件判断语句if语句","children":[{"level":4,"title":"语法一","slug":"语法一","link":"#语法一","children":[]},{"level":4,"title":"语法二","slug":"语法二","link":"#语法二","children":[]},{"level":4,"title":"语法三","slug":"语法三","link":"#语法三","children":[]}]},{"level":2,"title":"2.2 条件分支语句 switch语句","slug":"_2-2-条件分支语句-switch语句","link":"#_2-2-条件分支语句-switch语句","children":[{"level":4,"title":"语法","slug":"语法","link":"#语法","children":[]}]},{"level":2,"title":"2.3 循环语句","slug":"_2-3-循环语句","link":"#_2-3-循环语句","children":[{"level":3,"title":"2.3.1 while循环","slug":"_2-3-1-while循环","link":"#_2-3-1-while循环","children":[]},{"level":3,"title":"2.3.2 do…while循环","slug":"_2-3-2-do-while循环","link":"#_2-3-2-do-while循环","children":[]},{"level":3,"title":"2.3.3 do…while循环和while的区别：","slug":"_2-3-3-do-while循环和while的区别","link":"#_2-3-3-do-while循环和while的区别","children":[]},{"level":3,"title":"2.3.4 for循环","slug":"_2-3-4-for循环","link":"#_2-3-4-for循环","children":[]},{"level":3,"title":"2.3.5 死循环","slug":"_2-3-5-死循环","link":"#_2-3-5-死循环","children":[]}]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"basics/javascript/03流程控制.md","lastUpdated":1678883566000}'),D={name:"basics/javascript/03流程控制.md"},u=a("h1",{id:"_1-运算符",tabindex:"-1"},[d("1. 运算符 "),a("a",{class:"header-anchor",href:"#_1-运算符","aria-hidden":"true"},"#")],-1),y=h(`<ul><li><p>运算符也称为操作符</p></li><li><p>通过运算符可以对一个或多个值进行运算或操作</p></li><li><p>typeof运算符</p></li><li><p>用来检查一个变量的数据类型</p></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> 变量</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>它会返回一个用于描述类型的字符串作为结果</li></ul><h2 id="_1-1-算数运算符" tabindex="-1">1.1 算数运算符 <a class="header-anchor" href="#_1-1-算数运算符" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> 对两个值进行加法运算并返回结果，字符串就是拼串</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 对两个值进行减法运算并返回结果</span></span>
<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> 对两个值进行乘法运算并返回结果</span></span>
<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> 对两个值进行除法运算并返回结果</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> 对两个值进行取余运算并返回结果</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>除了加法以外，对非Number类型的值进行运算时，都会先转换为Number然后在做运算。</li><li>任何值和NaN做运算，结果都是NaN</li><li>而做加法运算时，如果是两个字符串进行相加，则会做拼串操作，将两个字符连接为一个字符串。</li><li>任何值和字符串做加法，都会先转换为字符串，然后再拼串</li></ul><h2 id="_1-2-一元运算符" tabindex="-1">1.2 一元运算符 <a class="header-anchor" href="#_1-2-一元运算符" aria-hidden="true">#</a></h2><ul><li>一元运算符只需要一个操作数</li></ul><h3 id="_1-2-1-一元的" tabindex="-1">1.2.1 一元的+ <a class="header-anchor" href="#_1-2-1-一元的" aria-hidden="true">#</a></h3><p>就是正号，不会对值产生任何影响，但是可以将一个非数字转换为数字</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-2-2-一元的" tabindex="-1">1.2.2 一元的- <a class="header-anchor" href="#_1-2-2-一元的" aria-hidden="true">#</a></h3><p>就是负号，可以对一个数字进行符号位取反</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-2-3-自增" tabindex="-1">1.2.3 自增 <a class="header-anchor" href="#_1-2-3-自增" aria-hidden="true">#</a></h3><ul><li>自增可以使变量在原值的基础上自增1</li><li>自增使用 ++</li><li>自增可以使用 前++（++a）后++(a++)</li><li>无论是++a 还是 a++都会立即使原变量自增1</li><li>不同的是++a和a++的值是不同的，</li><li>++a的值是变量的新值（自增后的值）</li><li>a++的值是变量的原值（自增前的值）</li></ul><h3 id="_1-2-4自减" tabindex="-1">1.2.4自减 <a class="header-anchor" href="#_1-2-4自减" aria-hidden="true">#</a></h3><ul><li>自减可以使变量在原值的基础上自减1</li><li>自减使用--</li><li>自减可以使用 前（a）后(a)</li><li>无论是a 还是 a都会立即使原变量自减1</li><li>不同的是a和a的值是不同的，</li><li>a的值是变量的新值（自减后的值）</li><li>a的值是变量的原值（自减前的值）</li></ul><h2 id="_1-3-逻辑运算符" tabindex="-1">1.3 逻辑运算符 <a class="header-anchor" href="#_1-3-逻辑运算符" aria-hidden="true">#</a></h2><h3 id="_1-3-1-非" tabindex="-1">1.3.1 ! 非 <a class="header-anchor" href="#_1-3-1-非" aria-hidden="true">#</a></h3><ul><li>非运算可以对一个布尔值进行取反，true变false false边true</li><li>当对非布尔值使用!时，会先将其转换为布尔值然后再取反</li><li>我们可以利用!来将其他的数据类型转换为布尔值</li></ul><h3 id="_1-3-2-与" tabindex="-1">1.3.2 &amp;&amp; 与 <a class="header-anchor" href="#_1-3-2-与" aria-hidden="true">#</a></h3><ul><li>&amp;&amp;可以对符号两侧的值进行与运算</li><li>只有两端的值都为true时，才会返回true。只要有一个false就会返回false。</li><li>与是一个短路的与，==如果第一个值是false，则不再检查第二个值==</li><li>对于非布尔值，它会将其转换为布尔值然后做运算，并返回原值</li></ul><p>规则</p><ol><li>如果第一个值为false，则返回第一个值</li><li>如果第一个值为true，则返回第二个值</li></ol><h3 id="_1-3-3-或" tabindex="-1">1.3.3 || 或 <a class="header-anchor" href="#_1-3-3-或" aria-hidden="true">#</a></h3><ul><li>||可以对符号两侧的值进行或运算</li><li>只有两端都是false时，才会返回false。只要有一个true，就会返回true。</li><li>或是一个短路的或，如果第一个值是true，则不再检查第二个值</li><li>对于非布尔值，它会将其转换为布尔值然后做运算，并返回原值</li></ul><p>规则</p><ol><li>如果第一个值为true，则返回第一个值</li><li>如果第一个值为false，则返回第二个值</li></ol><h2 id="_1-4-赋值运算符" tabindex="-1">1.4 赋值运算符 <a class="header-anchor" href="#_1-4-赋值运算符" aria-hidden="true">#</a></h2><ul><li>= 可以将符号右侧的值赋值给左侧变量</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> 相当于 a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  str </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">-=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">  相当于 a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">*=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> 相当于 a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">/=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> 相当于 a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">%=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> 相当于 a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;">5</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_1-5-关系运算符" tabindex="-1">1.5 关系运算符 &gt; &lt; &gt;= &lt;= <a class="header-anchor" href="#_1-5-关系运算符" aria-hidden="true">#</a></h2><ul><li>关系运算符用来比较两个值之间的大小关系的</li><li>关系运算符的规则和数学中一致，用来比较两个值之间的关系，</li><li>如果关系成立则返回true，关系不成立则返回false。</li><li>如果比较的两个值是非数值，会将其转换为Number然后再比较。</li><li>如果比较的两个值都是字符串，此时会比较字符串的Unicode编码，而不会转换为Number。</li></ul><h2 id="_1-6-相等运算符" tabindex="-1">1.6 相等运算符 <a class="header-anchor" href="#_1-6-相等运算符" aria-hidden="true">#</a></h2><h3 id="_1-6-1-相等" tabindex="-1">1.6.1 == 相等 <a class="header-anchor" href="#_1-6-1-相等" aria-hidden="true">#</a></h3><ul><li>判断左右两个值是否相等，如果相等返回true，如果不等返回false</li><li>相等会自动对两个值进行类型转换，如果对不同的类型进行比较，会将其转换为相同的类型然后再比较，转换后相等它也会返回true，null == undifined</li></ul><h3 id="_1-6-2-不等" tabindex="-1">1.6.2 !=不等 <a class="header-anchor" href="#_1-6-2-不等" aria-hidden="true">#</a></h3><ul><li>判断左右两个值是否不等，如果不等则返回true，如果相等则返回false</li><li>不等也会做自动的类型转换。</li></ul><h3 id="_1-6-3-全等" tabindex="-1">1.6.3 ===全等 <a class="header-anchor" href="#_1-6-3-全等" aria-hidden="true">#</a></h3><ul><li>判断左右两个值是否全等，它和相等类似，只不过它不会进行自动的类型转换，</li><li>如果两个值的类型不同，则直接返回false</li></ul><h3 id="_1-6-4-不全等" tabindex="-1">1.6.4 !==不全等 <a class="header-anchor" href="#_1-6-4-不全等" aria-hidden="true">#</a></h3><ul><li>和不等类似，但是它不会进行自动的类型转换，如果两个值的类型不同，它会直接返回true</li></ul><h2 id="_1-7-特殊的值" tabindex="-1">1.7 特殊的值： <a class="header-anchor" href="#_1-7-特殊的值" aria-hidden="true">#</a></h2><h3 id="_1-7-1-null和undefined" tabindex="-1">1.7.1 null和undefined <a class="header-anchor" href="#_1-7-1-null和undefined" aria-hidden="true">#</a></h3><ul><li>由于undefined衍生自null，所以null == undefined 会返回true。</li><li>但是 null === undefined 会返回false</li></ul><h3 id="_1-7-2-nan" tabindex="-1">1.7.2 NaN <a class="header-anchor" href="#_1-7-2-nan" aria-hidden="true">#</a></h3><ul><li>NaN不与任何值相等，报告它自身 NaN == NaN //false</li><li>判断一个值是否是NaN，使用isNaN()函数</li></ul><h2 id="_1-8三元运算符" tabindex="-1">1.8三元运算符 ?: <a class="header-anchor" href="#_1-8三元运算符" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">条件表达式</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">语句1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">语句2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>执行流程</li></ul><ol><li>先对条件表达式求值判断，</li><li>如果判断结果为true，则执行语句1，并返回执行结果</li><li>如果判断结果为false，则执行语句2，并返回执行结果</li></ol><h2 id="_1-9-优先级" tabindex="-1">1.9 优先级 <a class="header-anchor" href="#_1-9-优先级" aria-hidden="true">#</a></h2><ul><li>和数学中一样，JS中的运算符也是具有优先级的，</li><li>比如 先乘除 后加减 先与 后或</li><li>具体的优先级可以参考优先级的表格，在表格中越靠上的优先级越高，</li><li>优先级越高的越优先计算，优先级相同的，从左往右计算。</li><li>优先级不需要记忆，如果越到拿不准的，使用()来改变优先级。</li></ul><h1 id="_2-流程控制语句" tabindex="-1">2. 流程控制语句 <a class="header-anchor" href="#_2-流程控制语句" aria-hidden="true">#</a></h1><ul><li>程序都是自上向下的顺序执行的，</li><li>通过流程控制语句可以改变程序执行的顺序，或者反复的执行某一段的程序。</li></ul><h2 id="_2-1-条件判断语句if语句" tabindex="-1">2.1 条件判断语句if语句 <a class="header-anchor" href="#_2-1-条件判断语句if语句" aria-hidden="true">#</a></h2><h4 id="语法一" tabindex="-1">语法一 <a class="header-anchor" href="#语法一" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(条件表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>执行流程</li></ul><ol><li>if语句执行时，会先对条件表达式进行求值判断，</li><li>如果值为true，则执行if后的语句</li><li>如果值为false，则不执行</li></ol><h4 id="语法二" tabindex="-1">语法二 <a class="header-anchor" href="#语法二" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(条件表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>执行流程</li></ul><ol><li>if...else语句执行时，会对条件表达式进行求值判断，</li><li>如果值为true，则执行if后的语句</li><li>如果值为false，则执行else后的语句</li></ol><h4 id="语法三" tabindex="-1">语法三 <a class="header-anchor" href="#语法三" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(条件表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(条件表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(条件表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(条件表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>执行流程</p><ol><li>if...else if...else语句执行时，会自上至下依次对条件表达式进行求值判断，</li><li>如果判断结果为true，则执行当前if后的语句，执行完成后语句结束。</li><li>如果判断结果为false，则继续向下判断，直到找到为true的为止。</li><li>如果所有的条件表达式都是false，则执行else后的语句</li></ol><h2 id="_2-2-条件分支语句-switch语句" tabindex="-1">2.2 条件分支语句 switch语句 <a class="header-anchor" href="#_2-2-条件分支语句-switch语句" aria-hidden="true">#</a></h2><h4 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h4><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#A6ACCD;">(条件表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> 表达式</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">		语句</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> 表达式</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">		语句</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> 表达式</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">		语句</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">		语句</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>执行流程</li></ul><ol><li>switch…case…语句在执行时，会依次将case后的表达式的值和switch后的表达式的值进行全等比较，</li><li>如果比较结果为false，则继续向下比较。如果比较结果为true，则从当前case处开始向下执行代码。</li><li>如果所有的case判断结果都为false，则从default处开始执行代码。</li></ol><h2 id="_2-3-循环语句" tabindex="-1">2.3 循环语句 <a class="header-anchor" href="#_2-3-循环语句" aria-hidden="true">#</a></h2><ul><li>通过循环语句可以反复执行某些语句多次</li></ul><h3 id="_2-3-1-while循环" tabindex="-1">2.3.1 while循环 <a class="header-anchor" href="#_2-3-1-while循环" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;">(条件表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>执行流程</li></ul><ol><li>while语句在执行时，会先对条件表达式进行求值判断，</li><li>如果判断结果为false，则终止循环</li><li>如果判断结果为true，则执行循环体</li><li>循环体执行完毕，继续对条件表达式进行求值判断，依此类推</li></ol><h3 id="_2-3-2-do-while循环" tabindex="-1">2.3.2 do…while循环 <a class="header-anchor" href="#_2-3-2-do-while循环" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;">(条件表达式)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>执行流程</li></ul><ol><li>do…while在执行时，会先执行do后的循环体，然后在对条件表达式进行判断，</li><li>如果判断判断结果为false，则终止循环。</li><li>如果判断结果为true，则继续执行循环体，依此类推</li></ol><h3 id="_2-3-3-do-while循环和while的区别" tabindex="-1">2.3.3 do…while循环和while的区别： <a class="header-anchor" href="#_2-3-3-do-while循环和while的区别" aria-hidden="true">#</a></h3><ol><li>while：先判断后执行</li><li>do…while: 先执行后判断</li><li>do…while可以确保循环体至少执行一次。</li></ol><h3 id="_2-3-4-for循环" tabindex="-1">2.3.4 for循环 <a class="header-anchor" href="#_2-3-4-for循环" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(①初始化表达式 </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> ②条件表达式 </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> ④更新表达式)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    ③</span><span style="color:#A6ACCD;">语句</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>执行流程</li></ul><ol><li>首先执行①初始化表达式，初始化一个变量，</li><li>然后对②条件表达式进行求值判断，如果为false则终止循环</li><li>如果判断结果为true，则执行③循环体</li><li>循环体执行完毕，执行④更新表达式，对变量进行更新。</li><li>更新表达式执行完毕重复②</li></ol><h3 id="_2-3-5-死循环" tabindex="-1">2.3.5 死循环 <a class="header-anchor" href="#_2-3-5-死循环" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">;;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,93);function F(C,b,A,_,m,f){const l=r,n=p,e=i;return t(),c("div",null,[u,s(l,{readTime:"7",words:"2.4k"}),y,s(n),s(e)])}const j=o(D,[["render",F]]);export{x as __pageData,j as default};
