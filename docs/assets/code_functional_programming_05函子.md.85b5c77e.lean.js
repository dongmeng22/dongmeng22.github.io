import{_ as o,a as e}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.3dcd3b9e.js";import{_ as r}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.358bd1c3.js";import{_ as c,o as t,c as y,D as n,x as s,a as F,Q as D}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const O=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Functor 函子","slug":"functor-函子","link":"#functor-函子","children":[]},{"level":2,"title":"MayBe 函子","slug":"maybe-函子","link":"#maybe-函子","children":[]},{"level":2,"title":"Either 函子","slug":"either-函子","link":"#either-函子","children":[]},{"level":2,"title":"IO 函子","slug":"io-函子","link":"#io-函子","children":[]},{"level":2,"title":"Pointed 函子","slug":"pointed-函子","link":"#pointed-函子","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"code/functional_programming/05函子.md","lastUpdated":null}'),A={name:"code/functional_programming/05函子.md"},i=s("p",null,"为什么要学函子",-1),C=s("p",null,"到目前为止已经已经学习了函数式编程的一些基础，但是我们还没有演示在函数式编程中如何把副作用 控制在可控的范围内、异常处理、异步操作等",-1),b=s("p",null,"什么是 Functor",-1),u=s("p",null,"容器：包含值和值的变形关系(这个变形关系就是函数) 函子：是一个特殊的容器，通过一个普通的对象来实现，该对象具有 map 方法，map 方法可以运 行一个函数对值进行处理(变形关系)",-1),m=s("h2",{id:"functor-函子",tabindex:"-1"},[F("Functor 函子 "),s("a",{class:"header-anchor",href:"#functor-函子","aria-hidden":"true"},"#")],-1),d=D("",30);function f(h,E,v,g,_,x){const a=r,l=o,p=e;return t(),y("div",null,[i,C,b,u,m,n(a,{readTime:"5",words:"1.3k"}),d,n(l),n(p)])}const I=c(A,[["render",f]]);export{O as __pageData,I as default};
