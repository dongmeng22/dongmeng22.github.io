import{_ as o,a as l}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.3dcd3b9e.js";import{_ as d}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.b6ca37c5.js";import{_ as c,o as s,c as h,D as t,x as e,a,Q as p}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const C=JSON.parse('{"title":"1. HTTP报文","description":"","frontmatter":{},"headers":[{"level":2,"title":"2.1 请求行","slug":"_2-1-请求行","link":"#_2-1-请求行","children":[]},{"level":2,"title":"2.2 状态行","slug":"_2-2-状态行","link":"#_2-2-状态行","children":[]},{"level":2,"title":"2.3 首部字段","slug":"_2-3-首部字段","link":"#_2-3-首部字段","children":[]},{"level":2,"title":"2.4 其他","slug":"_2-4-其他","link":"#_2-4-其他","children":[]},{"level":2,"title":"3.1 报文主体和实体主体的差异","slug":"_3-1-报文主体和实体主体的差异","link":"#_3-1-报文主体和实体主体的差异","children":[{"level":3,"title":"报文（message）","slug":"报文-message","link":"#报文-message","children":[]},{"level":3,"title":"实体（entity）","slug":"实体-entity","link":"#实体-entity","children":[]}]},{"level":2,"title":"3.2 压缩传输的内容编码","slug":"_3-2-压缩传输的内容编码","link":"#_3-2-压缩传输的内容编码","children":[]},{"level":2,"title":"3.3.3 分割发送的分块传输编码","slug":"_3-3-3-分割发送的分块传输编码","link":"#_3-3-3-分割发送的分块传输编码","children":[]},{"level":2,"title":"4.1 multipart/form-data","slug":"_4-1-multipart-form-data","link":"#_4-1-multipart-form-data","children":[]},{"level":2,"title":"4.2 multipart/byteranges","slug":"_4-2-multipart-byteranges","link":"#_4-2-multipart-byteranges","children":[]},{"level":2,"title":"内容协商（Content Negotiation）技术","slug":"内容协商-content-negotiation-技术","link":"#内容协商-content-negotiation-技术","children":[{"level":3,"title":"服务器驱动协商（Server-driven Negotiation）","slug":"服务器驱动协商-server-driven-negotiation","link":"#服务器驱动协商-server-driven-negotiation","children":[]},{"level":3,"title":"客户端驱动协商（Agent-driven Negotiation）","slug":"客户端驱动协商-agent-driven-negotiation","link":"#客户端驱动协商-agent-driven-negotiation","children":[]},{"level":3,"title":"透明协商（Transparent Negotiation）","slug":"透明协商-transparent-negotiation","link":"#透明协商-transparent-negotiation","children":[]}]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"basics/http/03HTTP报文.md","lastUpdated":1678883566000}'),g={name:"basics/http/03HTTP报文.md"},_=e("p",null,[a("@[toc] "),e("img",{src:"https://img-blog.csdnimg.cn/20210125210324585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk3MjAwOA==,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"})],-1),u=e("h1",{id:"_1-http报文",tabindex:"-1"},[a("1. HTTP报文 "),e("a",{class:"header-anchor",href:"#_1-http报文","aria-hidden":"true"},"#")],-1),m=p('<blockquote><p>用于HTTP协议交互的信息被称为HTTP报文</p></blockquote><ul><li>请求端（客户端）的HTTP报文叫做请求报文，响应端（服务器端）的叫做响应报文</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/a940fde15d50a1c836c29481c1f4047d.png" alt="image"></p><h1 id="_2-请求报文及响应报文的结构" tabindex="-1">2. 请求报文及响应报文的结构 <a class="header-anchor" href="#_2-请求报文及响应报文的结构" aria-hidden="true">#</a></h1><p><img src="https://img-blog.csdnimg.cn/img_convert/fa9226cc6a8e0f70c135b1b0326a306a.png" alt="image"></p><h2 id="_2-1-请求行" tabindex="-1">2.1 请求行 <a class="header-anchor" href="#_2-1-请求行" aria-hidden="true">#</a></h2><p>包含用于请求的方法，请求URI和HTTP版本</p><h2 id="_2-2-状态行" tabindex="-1">2.2 状态行 <a class="header-anchor" href="#_2-2-状态行" aria-hidden="true">#</a></h2><p>包含表明响应结果的状态码，原因短语和HTTP版本</p><h2 id="_2-3-首部字段" tabindex="-1">2.3 首部字段 <a class="header-anchor" href="#_2-3-首部字段" aria-hidden="true">#</a></h2><p>包含表示请求和响应的各种条件和属性的各类首部</p><p>一般有4种首部，分别是：通用首部、请求首部、响应首部和实体首部</p><h2 id="_2-4-其他" tabindex="-1">2.4 其他 <a class="header-anchor" href="#_2-4-其他" aria-hidden="true">#</a></h2><p>可能包含HTTP的RFC里未定义的首部（Cookie等）</p><p><img src="https://img-blog.csdnimg.cn/img_convert/bca042ef2a2ab9dfe22d0d6d128d1d66.png" alt="image"></p><h1 id="_3-编码提升传输速率" tabindex="-1">3. 编码提升传输速率 <a class="header-anchor" href="#_3-编码提升传输速率" aria-hidden="true">#</a></h1><h2 id="_3-1-报文主体和实体主体的差异" tabindex="-1">3.1 报文主体和实体主体的差异 <a class="header-anchor" href="#_3-1-报文主体和实体主体的差异" aria-hidden="true">#</a></h2><h3 id="报文-message" tabindex="-1">报文（message） <a class="header-anchor" href="#报文-message" aria-hidden="true">#</a></h3><blockquote><p>HTTP通信中的基本单位，由8位组字节流（octet sequence，其中octet为8个比特）组成，通过HTTP通信传输</p></blockquote><h3 id="实体-entity" tabindex="-1">实体（entity） <a class="header-anchor" href="#实体-entity" aria-hidden="true">#</a></h3><blockquote><p>作为请求或响应的有效载荷数据（补充项）被传输，其内容由实体首部和实体主体组成。</p></blockquote><p>HTTP报文的主体用于传输请求或响应的实体主体。通常，报文主体等于实体主体。只有当传输中进行编码操作时，实体主体的内容发生变化，才导致它和报文主体产生差异。报文和实体这两个术语在之后会经常出现，请事先理解两者的差异。</p><h2 id="_3-2-压缩传输的内容编码" tabindex="-1">3.2 压缩传输的内容编码 <a class="header-anchor" href="#_3-2-压缩传输的内容编码" aria-hidden="true">#</a></h2><p>内容编码指明应用在实体内容上的编码格式，并保持实体信息原样压缩</p><p>内容编码后的实体由客户端接收并负责解码</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a680e00ef9420958604b171edf3d325d.png" alt="image"></p><p>常用的内容编码</p><ul><li>gzip（GNU zip）</li><li>compress（UNIX系统的标准压缩）</li><li>deflate（zlib）</li><li>identity（不进行编码）</li></ul><h2 id="_3-3-3-分割发送的分块传输编码" tabindex="-1">3.3.3 分割发送的分块传输编码 <a class="header-anchor" href="#_3-3-3-分割发送的分块传输编码" aria-hidden="true">#</a></h2><p>在传输大容量数据时，通过把数据分割成多块，能够让浏览器逐步显示页面。 这种把实体主体分块的功能称为<strong>分块传输编码</strong>（Chunked Transfer Coding）</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8b94ae1276755ca807f8bfe976d23ece.png" alt="image"></p><h1 id="_4-发送多种数据的多部分对象集合" tabindex="-1">4. 发送多种数据的多部分对象集合 <a class="header-anchor" href="#_4-发送多种数据的多部分对象集合" aria-hidden="true">#</a></h1><blockquote><p>HTTP协议中采纳了多部分对象集合，发送的一份报文主体内可含有多类型实体。</p></blockquote><p>通常是在图片或文本文件等上传时使用</p><p><img src="https://img-blog.csdnimg.cn/img_convert/eee8d33faf1e02ea1fbf26505abe5f89.png" alt="image"></p><h2 id="_4-1-multipart-form-data" tabindex="-1">4.1 multipart/form-data <a class="header-anchor" href="#_4-1-multipart-form-data" aria-hidden="true">#</a></h2><blockquote><p>在Web表单文件上传时使用</p></blockquote><h2 id="_4-2-multipart-byteranges" tabindex="-1">4.2 multipart/byteranges <a class="header-anchor" href="#_4-2-multipart-byteranges" aria-hidden="true">#</a></h2><blockquote><p>状态码206（Partial Content，部分内容）响应报文包含了多个范围的内容时使用</p></blockquote><h1 id="_5-获取部分内容的范围请求" tabindex="-1">5. 获取部分内容的范围请求 <a class="header-anchor" href="#_5-获取部分内容的范围请求" aria-hidden="true">#</a></h1><blockquote><p>指定范围发送的请求叫做范围请求（Range Request）</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/b83a892d43bb90c1f7f7774666306178.png" alt="image"></p><ul><li>针对范围请求，响应会返回状态码为206 Partial Content的响应报文。</li><li>另外，对于多重范围的范围请求，响应会在首部字段Content-Type标明multipart/byteranges后返回响应报文。</li><li>如果服务器端无法响应范围请求，则会返回状态码200 OK和完整的实体内容。</li></ul><h1 id="_6-内容协商返回最合适的内容" tabindex="-1">6. 内容协商返回最合适的内容 <a class="header-anchor" href="#_6-内容协商返回最合适的内容" aria-hidden="true">#</a></h1><p><img src="https://img-blog.csdnimg.cn/img_convert/3e77a72115310694ae9e38751961644c.png" alt="image"></p><h2 id="内容协商-content-negotiation-技术" tabindex="-1">内容协商（Content Negotiation）技术 <a class="header-anchor" href="#内容协商-content-negotiation-技术" aria-hidden="true">#</a></h2><h3 id="服务器驱动协商-server-driven-negotiation" tabindex="-1">服务器驱动协商（Server-driven Negotiation） <a class="header-anchor" href="#服务器驱动协商-server-driven-negotiation" aria-hidden="true">#</a></h3><blockquote><p>由服务器端进行内容协商。以请求的首部字段为参考，在服务器端自动处理</p></blockquote><h3 id="客户端驱动协商-agent-driven-negotiation" tabindex="-1">客户端驱动协商（Agent-driven Negotiation） <a class="header-anchor" href="#客户端驱动协商-agent-driven-negotiation" aria-hidden="true">#</a></h3><blockquote><p>用户从浏览器显示的可选项列表中手动选择 还可以利用JavaScript脚本在Web页面上自动进行上述选择</p></blockquote><h3 id="透明协商-transparent-negotiation" tabindex="-1">透明协商（Transparent Negotiation） <a class="header-anchor" href="#透明协商-transparent-negotiation" aria-hidden="true">#</a></h3><blockquote><p>服务器驱动和客户端驱动的结合体，是由服务器端和客户端各自进行内容协商的一种方法</p></blockquote><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>',53);function b(f,v,k,T,x,q){const i=d,n=o,r=l;return s(),h("div",null,[_,u,t(i,{readTime:"3",words:"983"}),m,t(n),t(r)])}const F=c(g,[["render",b]]);export{C as __pageData,F as default};
