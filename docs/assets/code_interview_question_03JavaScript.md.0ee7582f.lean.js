import{_ as o,a as e}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.2d10c1d4.js";import{_ as t}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.63457685.js";import{_ as r,o as c,c as y,D as s,Q as n}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 变量声明与类型","slug":"_1-变量声明与类型","link":"#_1-变量声明与类型","children":[{"level":3,"title":"1.1 var let const 区别","slug":"_1-1-var-let-const-区别","link":"#_1-1-var-let-const-区别","children":[]},{"level":3,"title":"1.2 数据类型","slug":"_1-2-数据类型","link":"#_1-2-数据类型","children":[]},{"level":3,"title":"1.3 值类型与引用类型的区别","slug":"_1-3-值类型与引用类型的区别","link":"#_1-3-值类型与引用类型的区别","children":[]},{"level":3,"title":"1.4 typeof 能判断哪些类型","slug":"_1-4-typeof-能判断哪些类型","link":"#_1-4-typeof-能判断哪些类型","children":[]},{"level":3,"title":"1.5 判断数据类型的方式","slug":"_1-5-判断数据类型的方式","link":"#_1-5-判断数据类型的方式","children":[]},{"level":3,"title":"1.6 === 与 ==","slug":"_1-6-与","link":"#_1-6-与","children":[]},{"level":3,"title":"1.7 truly变量与falsely变量","slug":"_1-7-truly变量与falsely变量","link":"#_1-7-truly变量与falsely变量","children":[]},{"level":3,"title":"1.8 强制类型转换和隐式类型转换","slug":"_1-8-强制类型转换和隐式类型转换","link":"#_1-8-强制类型转换和隐式类型转换","children":[]},{"level":3,"title":"1.9 语句与表达式","slug":"_1-9-语句与表达式","link":"#_1-9-语句与表达式","children":[]}]},{"level":2,"title":"2. 数组字符串相关","slug":"_2-数组字符串相关","link":"#_2-数组字符串相关","children":[{"level":3,"title":"2.1 手写深拷贝","slug":"_2-1-手写深拷贝","link":"#_2-1-手写深拷贝","children":[]},{"level":3,"title":"2.2 手写深度比较","slug":"_2-2-手写深度比较","link":"#_2-2-手写深度比较","children":[]},{"level":3,"title":"2.3 数组的API有哪些是纯函数","slug":"_2-3-数组的api有哪些是纯函数","link":"#_2-3-数组的api有哪些是纯函数","children":[]},{"level":3,"title":"2.4 split()和join()的区别","slug":"_2-4-split-和join-的区别","link":"#_2-4-split-和join-的区别","children":[]},{"level":3,"title":"2.5 数组slice与splice区别","slug":"_2-5-数组slice与splice区别","link":"#_2-5-数组slice与splice区别","children":[]},{"level":3,"title":"2.6 手写字符串 trim","slug":"_2-6-手写字符串-trim","link":"#_2-6-手写字符串-trim","children":[]}]},{"level":2,"title":"3. 函数相关","slug":"_3-函数相关","link":"#_3-函数相关","children":[{"level":3,"title":"3.1 函数声明与函数表达式","slug":"_3-1-函数声明与函数表达式","link":"#_3-1-函数声明与函数表达式","children":[]},{"level":3,"title":"3.2 什么是JSON","slug":"_3-2-什么是json","link":"#_3-2-什么是json","children":[]},{"level":3,"title":"3.3 将URL参数解析成JS对象","slug":"_3-3-将url参数解析成js对象","link":"#_3-3-将url参数解析成js对象","children":[]}]},{"level":2,"title":"4. 原型与原型链","slug":"_4-原型与原型链","link":"#_4-原型与原型链","children":[{"level":3,"title":"4.1 解释一下原型与原型链","slug":"_4-1-解释一下原型与原型链","link":"#_4-1-解释一下原型与原型链","children":[]},{"level":3,"title":"4.2 class的原型本质","slug":"_4-2-class的原型本质","link":"#_4-2-class的原型本质","children":[]},{"level":3,"title":"4.3 new Object() 与 Object.create()的区别","slug":"_4-3-new-object-与-object-create-的区别","link":"#_4-3-new-object-与-object-create-的区别","children":[]},{"level":3,"title":"4.4 用class语法写一个简单的jQuery","slug":"_4-4-用class语法写一个简单的jquery","link":"#_4-4-用class语法写一个简单的jquery","children":[]}]},{"level":2,"title":"5. 作用域与闭包","slug":"_5-作用域与闭包","link":"#_5-作用域与闭包","children":[{"level":3,"title":"5.1 作用域","slug":"_5-1-作用域","link":"#_5-1-作用域","children":[]},{"level":3,"title":"5.2 this不同场景下如何取值","slug":"_5-2-this不同场景下如何取值","link":"#_5-2-this不同场景下如何取值","children":[]},{"level":3,"title":"5.3 手写bind","slug":"_5-3-手写bind","link":"#_5-3-手写bind","children":[]},{"level":3,"title":"5.4 闭包","slug":"_5-4-闭包","link":"#_5-4-闭包","children":[]},{"level":3,"title":"5.5 闭包的应用场景","slug":"_5-5-闭包的应用场景","link":"#_5-5-闭包的应用场景","children":[]}]},{"level":2,"title":"6. ES6新特性","slug":"_6-es6新特性","link":"#_6-es6新特性","children":[]},{"level":2,"title":"7. 异步相关","slug":"_7-异步相关","link":"#_7-异步相关","children":[{"level":3,"title":"7.1 同步与异步的区别","slug":"_7-1-同步与异步的区别","link":"#_7-1-同步与异步的区别","children":[]},{"level":3,"title":"7.2 前端使用异步的场景","slug":"_7-2-前端使用异步的场景","link":"#_7-2-前端使用异步的场景","children":[]},{"level":3,"title":"7.3 Promise的三种状态","slug":"_7-3-promise的三种状态","link":"#_7-3-promise的三种状态","children":[]},{"level":3,"title":"7.4 promise的then和catch","slug":"_7-4-promise的then和catch","link":"#_7-4-promise的then和catch","children":[]},{"level":3,"title":"7.5 手写promise加载图片","slug":"_7-5-手写promise加载图片","link":"#_7-5-手写promise加载图片","children":[]},{"level":3,"title":"7.6 async/await与Promise","slug":"_7-6-async-await与promise","link":"#_7-6-async-await与promise","children":[]},{"level":3,"title":"7.7 字节面试看代码题","slug":"_7-7-字节面试看代码题","link":"#_7-7-字节面试看代码题","children":[]},{"level":3,"title":"7.8 for-of 的应用场景  【异步】","slug":"_7-8-for-of-的应用场景-【异步】","link":"#_7-8-for-of-的应用场景-【异步】","children":[]}]},{"level":2,"title":"8. Event Loop","slug":"_8-event-loop","link":"#_8-event-loop","children":[{"level":3,"title":"8.1 宏任务macroTask与微任务microTask","slug":"_8-1-宏任务macrotask与微任务microtask","link":"#_8-1-宏任务macrotask与微任务microtask","children":[]},{"level":3,"title":"8.2 Event Loop机制","slug":"_8-2-event-loop机制","link":"#_8-2-event-loop机制","children":[]},{"level":3,"title":"8.3 event loop练习","slug":"_8-3-event-loop练习","link":"#_8-3-event-loop练习","children":[]}]},{"level":2,"title":"9. DOM","slug":"_9-dom","link":"#_9-dom","children":[{"level":3,"title":"9.1 获取节点操作","slug":"_9-1-获取节点操作","link":"#_9-1-获取节点操作","children":[]},{"level":3,"title":"9.2 标签属性 attribute","slug":"_9-2-标签属性-attribute","link":"#_9-2-标签属性-attribute","children":[]},{"level":3,"title":"9.3 对象属性 property","slug":"_9-3-对象属性-property","link":"#_9-3-对象属性-property","children":[]},{"level":3,"title":"9.4 DOM结构操作","slug":"_9-4-dom结构操作","link":"#_9-4-dom结构操作","children":[]},{"level":3,"title":"9.5 优化DOM性能","slug":"_9-5-优化dom性能","link":"#_9-5-优化dom性能","children":[{"level":4,"title":"9.5.1 对DOM查询进行缓存","slug":"_9-5-1-对dom查询进行缓存","link":"#_9-5-1-对dom查询进行缓存","children":[]},{"level":4,"title":"9.5.2 将频繁操作改为一次性操作","slug":"_9-5-2-将频繁操作改为一次性操作","link":"#_9-5-2-将频繁操作改为一次性操作","children":[]}]}]},{"level":2,"title":"10. BOM","slug":"_10-bom","link":"#_10-bom","children":[{"level":3,"title":"10.1 检查浏览器类型","slug":"_10-1-检查浏览器类型","link":"#_10-1-检查浏览器类型","children":[]},{"level":3,"title":"10.2 拆解URL各个部分","slug":"_10-2-拆解url各个部分","link":"#_10-2-拆解url各个部分","children":[]}]},{"level":2,"title":"11. 事件","slug":"_11-事件","link":"#_11-事件","children":[{"level":3,"title":"11.1 事件绑定、冒泡、代理","slug":"_11-1-事件绑定、冒泡、代理","link":"#_11-1-事件绑定、冒泡、代理","children":[]},{"level":3,"title":"11.2 写一个通用的事件绑定函数","slug":"_11-2-写一个通用的事件绑定函数","link":"#_11-2-写一个通用的事件绑定函数","children":[]},{"level":3,"title":"11.3 描述事件冒泡过程","slug":"_11-3-描述事件冒泡过程","link":"#_11-3-描述事件冒泡过程","children":[]},{"level":3,"title":"11.4 无限下拉的图片列表，如何监听每个图片的点击","slug":"_11-4-无限下拉的图片列表-如何监听每个图片的点击","link":"#_11-4-无限下拉的图片列表-如何监听每个图片的点击","children":[]}]},{"level":2,"title":"12. AJAX","slug":"_12-ajax","link":"#_12-ajax","children":[{"level":3,"title":"12.1 手写一个简单的ajax","slug":"_12-1-手写一个简单的ajax","link":"#_12-1-手写一个简单的ajax","children":[]},{"level":3,"title":"12.2 跨域解决方案","slug":"_12-2-跨域解决方案","link":"#_12-2-跨域解决方案","children":[]}]},{"level":2,"title":"13. 浏览器存储","slug":"_13-浏览器存储","link":"#_13-浏览器存储","children":[]},{"level":2,"title":"14. 页面加载","slug":"_14-页面加载","link":"#_14-页面加载","children":[{"level":3,"title":"14.1 资源的形式","slug":"_14-1-资源的形式","link":"#_14-1-资源的形式","children":[]},{"level":3,"title":"14.2 从输入url到渲染出页面的整个过程","slug":"_14-2-从输入url到渲染出页面的整个过程","link":"#_14-2-从输入url到渲染出页面的整个过程","children":[]},{"level":3,"title":"14.3 window.onload与DOMContentLoaded的区别","slug":"_14-3-window-onload与domcontentloaded的区别","link":"#_14-3-window-onload与domcontentloaded的区别","children":[]},{"level":3,"title":"14.4 重绘与回流","slug":"_14-4-重绘与回流","link":"#_14-4-重绘与回流","children":[]}]},{"level":2,"title":"15. 性能优化","slug":"_15-性能优化","link":"#_15-性能优化","children":[{"level":3,"title":"15.1 前端常见性能优化方案","slug":"_15-1-前端常见性能优化方案","link":"#_15-1-前端常见性能优化方案","children":[]},{"level":3,"title":"15.2 缓存","slug":"_15-2-缓存","link":"#_15-2-缓存","children":[]},{"level":3,"title":"15.3 SSR服务渲染","slug":"_15-3-ssr服务渲染","link":"#_15-3-ssr服务渲染","children":[]},{"level":3,"title":"15.4 图片懒加载","slug":"_15-4-图片懒加载","link":"#_15-4-图片懒加载","children":[]},{"level":3,"title":"15.5 节流与防抖","slug":"_15-5-节流与防抖","link":"#_15-5-节流与防抖","children":[]}]},{"level":2,"title":"16. 前端安全","slug":"_16-前端安全","link":"#_16-前端安全","children":[{"level":3,"title":"16.1 XSS 跨站请求攻击","slug":"_16-1-xss-跨站请求攻击","link":"#_16-1-xss-跨站请求攻击","children":[]},{"level":3,"title":"16.2 XSRF 跨站请求伪造","slug":"_16-2-xsrf-跨站请求伪造","link":"#_16-2-xsrf-跨站请求伪造","children":[]}]},{"level":2,"title":"17. 算法刷题","slug":"_17-算法刷题","link":"#_17-算法刷题","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"code/interview/question/03JavaScript.md","lastUpdated":1678883566000}'),F={name:"code/interview/question/03JavaScript.md"},i=n("",8),D=n("",260);function A(C,b,d,u,h,m){const a=t,l=o,p=e;return c(),y("div",null,[i,s(a,{readTime:"24",words:"6.3k"}),D,s(l),s(p)])}const k=r(F,[["render",A]]);export{E as __pageData,k as default};
