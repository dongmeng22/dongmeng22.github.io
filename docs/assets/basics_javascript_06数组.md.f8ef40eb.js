import{_ as p,a as o}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.3dcd3b9e.js";import{_ as r}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.358bd1c3.js";import{_ as t,o as c,c as i,D as s,x as a,a as y,Q as C}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const j=JSON.parse('{"title":"1. 数组","description":"","frontmatter":{},"headers":[{"level":3,"title":"2.1 创建数组","slug":"_2-1-创建数组","link":"#_2-1-创建数组","children":[]},{"level":3,"title":"2.2 向数组中添加元素","slug":"_2-2-向数组中添加元素","link":"#_2-2-向数组中添加元素","children":[]},{"level":3,"title":"2.3 创建数组时直接添加元素","slug":"_2-3-创建数组时直接添加元素","link":"#_2-3-创建数组时直接添加元素","children":[]},{"level":3,"title":"2.4 获取和修改数组的长度","slug":"_2-4-获取和修改数组的长度","link":"#_2-4-获取和修改数组的长度","children":[]},{"level":3,"title":"2.5 修改数组的长度","slug":"_2-5-修改数组的长度","link":"#_2-5-修改数组的长度","children":[]},{"level":3,"title":"3.1 slice(sart,[end])","slug":"_3-1-slice-sart-end","link":"#_3-1-slice-sart-end","children":[]},{"level":3,"title":"3.2 splice()","slug":"_3-2-splice","link":"#_3-2-splice","children":[]},{"level":3,"title":"3.3 join([splitor])","slug":"_3-3-join-splitor","link":"#_3-3-join-splitor","children":[]},{"level":3,"title":"3.4 sort()","slug":"_3-4-sort","link":"#_3-4-sort","children":[]},{"level":3,"title":"4.1 一般情况我们都是使用for循环来遍历数组","slug":"_4-1-一般情况我们都是使用for循环来遍历数组","link":"#_4-1-一般情况我们都是使用for循环来遍历数组","children":[]},{"level":3,"title":"4.2 使用forEach()方法来遍历数组（不兼容IE8）","slug":"_4-2-使用foreach-方法来遍历数组-不兼容ie8","link":"#_4-2-使用foreach-方法来遍历数组-不兼容ie8","children":[]},{"level":2,"title":"数组创建","slug":"数组创建","link":"#数组创建","children":[]},{"level":2,"title":"数组属性","slug":"数组属性","link":"#数组属性","children":[]},{"level":2,"title":"检测数组","slug":"检测数组","link":"#检测数组","children":[]},{"level":2,"title":"遍历数组","slug":"遍历数组","link":"#遍历数组","children":[]},{"level":2,"title":"转换方法","slug":"转换方法","link":"#转换方法","children":[]},{"level":2,"title":"栈方法【改变原数组】","slug":"栈方法【改变原数组】","link":"#栈方法【改变原数组】","children":[]},{"level":2,"title":"队列方法【改变原数组】","slug":"队列方法【改变原数组】","link":"#队列方法【改变原数组】","children":[]},{"level":2,"title":"排序方法【改变原数组】","slug":"排序方法【改变原数组】","link":"#排序方法【改变原数组】","children":[]},{"level":2,"title":"操作方法【不改变原数组】","slug":"操作方法【不改变原数组】","link":"#操作方法【不改变原数组】","children":[]},{"level":2,"title":"归并方法【不改变原数组】","slug":"归并方法【不改变原数组】","link":"#归并方法【不改变原数组】","children":[]},{"level":2,"title":"搜索和位置方法【不改变原数组】","slug":"搜索和位置方法【不改变原数组】","link":"#搜索和位置方法【不改变原数组】","children":[]},{"level":2,"title":"迭代方法【不改变原数组】","slug":"迭代方法【不改变原数组】","link":"#迭代方法【不改变原数组】","children":[]},{"level":2,"title":"迭代器方法【ES6】","slug":"迭代器方法【es6】","link":"#迭代器方法【es6】","children":[]},{"level":2,"title":"复制填充方法 【改变原数组】【ES6】","slug":"复制填充方法-【改变原数组】【es6】","link":"#复制填充方法-【改变原数组】【es6】","children":[]},{"level":2,"title":"拓展运算符...【ES6】","slug":"拓展运算符-【es6】","link":"#拓展运算符-【es6】","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"basics/javascript/06数组.md","lastUpdated":null}'),D={name:"basics/javascript/06数组.md"},A=a("p",null,"@[toc]",-1),d=a("h1",{id:"_1-数组",tabindex:"-1"},[y("1. 数组 "),a("a",{class:"header-anchor",href:"#_1-数组","aria-hidden":"true"},"#")],-1),F=C(`<ul><li>数组也是一个对象，是一个用来存储数据的对象和Object类似，但是它的存储效率比普通对象要高</li><li>数组中保存的内容我们称为元素</li><li>数组使用索引（index）来操作元素</li><li>索引指由0开始的整数</li></ul><h1 id="_2-数组的操作" tabindex="-1">2. 数组的操作 <a class="header-anchor" href="#_2-数组的操作" aria-hidden="true">#</a></h1><h3 id="_2-1-创建数组" tabindex="-1">2.1 创建数组 <a class="header-anchor" href="#_2-1-创建数组" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Array</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-2-向数组中添加元素" tabindex="-1">2.2 向数组中添加元素 <a class="header-anchor" href="#_2-2-向数组中添加元素" aria-hidden="true">#</a></h3><p>数组对象[索引] = 值;</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-3-创建数组时直接添加元素" tabindex="-1">2.3 创建数组时直接添加元素 <a class="header-anchor" href="#_2-3-创建数组时直接添加元素" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [元素1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">元素2</span><span style="color:#89DDFF;">....</span><span style="color:#A6ACCD;">元素N]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,null</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-4-获取和修改数组的长度" tabindex="-1">2.4 获取和修改数组的长度 <a class="header-anchor" href="#_2-4-获取和修改数组的长度" aria-hidden="true">#</a></h3><ul><li>使用length属性来操作数组的长度</li><li>获取长度： 数组.length</li><li>length获取到的是数组的最大索引+1</li><li>对于连续的数组，length获取到的就是数组中元素的个数</li></ul><h3 id="_2-5-修改数组的长度" tabindex="-1">2.5 修改数组的长度 <a class="header-anchor" href="#_2-5-修改数组的长度" aria-hidden="true">#</a></h3><ul><li>数组.length = 新长度</li><li>如果修改后的length大于原长度，则多出的部分会空出来</li><li>如果修改后的length小于原长度，则原数组中多出的元素会被删除</li><li>向数组的最后添加元素</li><li>数组[数组.length] = 值;</li></ul><h1 id="_3-数组的方法" tabindex="-1">3. 数组的方法 <a class="header-anchor" href="#_3-数组的方法" aria-hidden="true">#</a></h1><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>push()</td><td>用来向数组的末尾添加一个或多个元素，并返回数组新的长度</td></tr><tr><td>pop()</td><td>用来删除数组的最后一个元素，并返回被删除的元素</td></tr><tr><td>unshift()</td><td>向数组的开头添加一个或多个元素，并返回数组的新的长度</td></tr><tr><td>shift()</td><td>删除数组的开头的一个元素，并返回被删除的元素</td></tr><tr><td>reverse()</td><td>可以用来反转一个数组，它会对原数组产生影响</td></tr><tr><td>concat()</td><td>可以连接两个或多个数组，它不会影响原数组，而是新数组作为返回值返回</td></tr></tbody></table><h3 id="_3-1-slice-sart-end" tabindex="-1">3.1 slice(sart,[end]) <a class="header-anchor" href="#_3-1-slice-sart-end" aria-hidden="true">#</a></h3><ul><li>可以从一个数组中截取指定的元素</li><li>该方法不会影响原数组，而是将截取到的内容封装为一个新的数组并返回</li><li>参数：<br> 1.截取开始位置的索引（包括开始位置）<br> 2.截取结束位置的索引（不包括结束位置）<br> 第二个参数可以省略不写，如果不写则一直截取到最后<br> 参数可以传递一个负值，如果是负值，则从后往前数</li></ul><h3 id="_3-2-splice" tabindex="-1">3.2 splice() <a class="header-anchor" href="#_3-2-splice" aria-hidden="true">#</a></h3><ul><li>可以用来删除数组中指定元素，并使用新的元素替换</li><li>该方法会将删除的元素封装到新数组中返回<br> 参数： <ol><li>删除开始位置的索引</li><li>删除的个数</li><li>三个以后，都是替换的元素，这些元素将会插入到开始位置索引的前边</li></ol></li></ul><h3 id="_3-3-join-splitor" tabindex="-1">3.3 join([splitor]) <a class="header-anchor" href="#_3-3-join-splitor" aria-hidden="true">#</a></h3><ul><li>可以将一个数组转换为一个字符串</li><li>参数：</li><li>需要一个字符串作为参数，这个字符串将会作为连接符来连接数组中的元素</li><li>如果不指定连接符则默认使用,</li></ul><h3 id="_3-4-sort" tabindex="-1">3.4 sort() <a class="header-anchor" href="#_3-4-sort" aria-hidden="true">#</a></h3><ul><li>可以对一个数组中的内容进行排序，默认是按照Unicode编码进行排序</li><li>调用以后，会直接修改原数组。</li><li>可以自己指定排序的规则，需要一个回调函数作为参数：</li><li>我们可以自己来指定排序的规则</li><li>我们可以在sort()添加一个回调函数，来指定排序规则，</li><li>回调函数中需要定义两个形参,</li><li>浏览器将会分别使用数组中的元素作为实参去调用回调函数</li><li>使用哪个元素调用不确定，但是肯定的是在数组中a一定在b前边</li><li>浏览器会根据回调函数的返回值来决定元素的顺序，</li><li>如果返回一个大于0的值，则元素会交换位置</li><li>如果返回一个小于0的值，则元素位置不变</li><li>如果返回一个0，则认为两个元素相等，也不交换位置</li><li>如果需要升序排列，则返回 a-b</li><li>如果需要降序排列，则返回b-a</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">){</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">//升序排列  </span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">//return a-b;  </span></span>
<span class="line"><span style="color:#F07178;">	  </span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">//降序排列  </span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h1 id="_4-遍历数组" tabindex="-1">4. 遍历数组 <a class="header-anchor" href="#_4-遍历数组" aria-hidden="true">#</a></h1><ul><li>遍历数组就是将数组中元素都获取到</li></ul><h3 id="_4-1-一般情况我们都是使用for循环来遍历数组" tabindex="-1">4.1 一般情况我们都是使用for循环来遍历数组 <a class="header-anchor" href="#_4-1-一般情况我们都是使用for循环来遍历数组" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">数组</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//数组[i]  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4-2-使用foreach-方法来遍历数组-不兼容ie8" tabindex="-1">4.2 使用forEach()方法来遍历数组（不兼容IE8） <a class="header-anchor" href="#_4-2-使用foreach-方法来遍历数组-不兼容ie8" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">数组</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">){</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>forEach()方法需要一个回调函数作为参数，</li><li>数组中有几个元素，回调函数就会被调用几次，</li><li>每次调用时，都会将遍历到的信息以实参的形式传递进来，</li><li>我们可以定义形参来获取这些信息。</li><li>value:正在遍历的元素</li><li>index:正在遍历元素的索引</li><li>obj:被遍历对象</li></ul><h2 id="数组创建" tabindex="-1">数组创建 <a class="header-anchor" href="#数组创建" aria-hidden="true">#</a></h2><ol><li>new Array</li><li>Array</li><li>字面量</li><li><code>Array.from()</code> [类数组] -&gt; [数组] 【ES6】</li><li><code>Array.of() </code> [参数] -&gt; [数组] 【ES6】</li></ol><h2 id="数组属性" tabindex="-1">数组属性 <a class="header-anchor" href="#数组属性" aria-hidden="true">#</a></h2><p><code>length</code> 数组长度</p><h2 id="检测数组" tabindex="-1">检测数组 <a class="header-anchor" href="#检测数组" aria-hidden="true">#</a></h2><ol><li><code>instanceof Array</code></li><li><code>Array.isArray()</code></li></ol><h2 id="遍历数组" tabindex="-1">遍历数组 <a class="header-anchor" href="#遍历数组" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> nums</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// nums[i]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(i </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> nums)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// nums[i]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">nums</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// item</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(item </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> nums)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// item</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="转换方法" tabindex="-1">转换方法 <a class="header-anchor" href="#转换方法" aria-hidden="true">#</a></h2><ol><li><code>toString()</code> [逗号分隔的字符串]</li><li><code>toLocaleString() </code></li><li><code>valueOf()</code> [数组本身]</li></ol><h2 id="栈方法【改变原数组】" tabindex="-1">栈方法【改变原数组】 <a class="header-anchor" href="#栈方法【改变原数组】" aria-hidden="true">#</a></h2><ol><li><code>push()</code> [栈顶]推入 【返回新数组的长度】</li><li><code>pop()</code> [栈顶]弹出 【返回删除的项】</li></ol><h2 id="队列方法【改变原数组】" tabindex="-1">队列方法【改变原数组】 <a class="header-anchor" href="#队列方法【改变原数组】" aria-hidden="true">#</a></h2><ol><li><p><code>push() </code> [队尾]入队 【返回新数组的长度】</p></li><li><p><code>shift() </code>[队头]出队 【返回删除的项】</p></li><li><p><code>unshift()</code> [队头]入队 【返回新数组的长度】</p></li><li><p><code>pop()</code> [队尾]出队 【返回删除的项】</p></li></ol><h2 id="排序方法【改变原数组】" tabindex="-1">排序方法【改变原数组】 <a class="header-anchor" href="#排序方法【改变原数组】" aria-hidden="true">#</a></h2><ol><li><code>reverse()</code> 【返回调用数组引用】</li><li><code>sort()</code> [调用String()转型] 【返回调用数组引用】[对数字数组从小到大排序<code>sort((a,b)=&gt;a-b)</code>]</li></ol><h2 id="操作方法【不改变原数组】" tabindex="-1">操作方法【不改变原数组】 <a class="header-anchor" href="#操作方法【不改变原数组】" aria-hidden="true">#</a></h2><ol><li><code>concat()</code> [连接数组，会打平参数数组]【返回新构建的数组，不改变原数组】</li><li><code>slice([begin[, end]])</code> [截取数组]【返回新构建的数组，不改变原数组】</li><li><code>splice(start[, deleteCount[, item1[, item2[, ...]]]])</code> [删除，插入，替换] 【返回被删除的元素，不改变原数组】 删除 (开始位置, 删除个数) 插入 (开始位置, 0, 要插入的元素) 替换 (开始位置, 删除个数, 要插入的元素)</li><li><code>flat([depth])</code>扁平化数组 【ES10】【返回新构建的数组，不改变原数组】</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newArr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flat</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(newArr)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [ 0, 1, 2, 3, 4 ]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [ 0, 1, 2, [ 3, 4 ] ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]]]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newArr2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arr2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(newArr2)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [ 0, 1, 2, 3, [ 4, 5 ] ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="归并方法【不改变原数组】" tabindex="-1">归并方法【不改变原数组】 <a class="header-anchor" href="#归并方法【不改变原数组】" aria-hidden="true">#</a></h2><ol><li><code>reduce()</code></li><li><code>reduceRight()</code></li></ol><p><a href="https://blog.csdn.net/weixin_44972008/article/details/113574371" target="_blank" rel="noreferrer">【JS】JavaScript数组-归并方法-reduce-reduceRight</a></p><p><a href="https://juejin.cn/post/6844904063729926152" target="_blank" rel="noreferrer">25个你不得不知道的数组reduce高级用法</a></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> values </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> values</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">prev</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">cur</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">array</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> prev </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> cur)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(sum) </span><span style="color:#676E95;font-style:italic;">// 15</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="搜索和位置方法【不改变原数组】" tabindex="-1">搜索和位置方法【不改变原数组】 <a class="header-anchor" href="#搜索和位置方法【不改变原数组】" aria-hidden="true">#</a></h2><ol><li><code>indexOf(要查找的元素, [起始搜索位置])</code> 【返回位置】</li><li><code>lastIndexOf() </code>【返回位置】</li><li><code>includes() </code>【返回布尔值】【ES7】</li><li><code>find()</code> 【返回第一个匹配的元素】 【ES6】</li><li><code>findIndex()</code> 【返回第一个匹配元素的索引】 【ES6】</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> evens </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> evens</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">find</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">element</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">array</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> element </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">) </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> result2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> evens</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findIndex</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">element</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">array</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> element </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">) </span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result) </span><span style="color:#676E95;font-style:italic;">// 4</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result2) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="迭代方法【不改变原数组】" tabindex="-1">迭代方法【不改变原数组】 <a class="header-anchor" href="#迭代方法【不改变原数组】" aria-hidden="true">#</a></h2><ol><li><code>every()</code> [每一项都为真，则返回真]</li><li><code>some() </code>[有一项为真，则返回真]</li><li><code>filter()</code> [返回为真的项组成的数组]</li><li><code>forEach()</code> [没有返回值]</li><li><code>map()</code> [返回每一项运行结果组成的新数组]</li></ol><p><a href="https://blog.csdn.net/weixin_44972008/article/details/113574651" target="_blank" rel="noreferrer">【ES6】JavaScript数组-迭代器方法-keys()-values()-entries()-迭代方法-every()-some()-filter()-map()-forEach()</a></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> evens </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> evens</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">every</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">element</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">array</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> element </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">) </span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="迭代器方法【es6】" tabindex="-1">迭代器方法【ES6】 <a class="header-anchor" href="#迭代器方法【es6】" aria-hidden="true">#</a></h2><ol><li><code>keys() </code></li><li><code>values() </code></li><li><code>entries() </code></li></ol><p><a href="https://blog.csdn.net/weixin_44972008/article/details/113574651" target="_blank" rel="noreferrer">【ES6】JavaScript数组-迭代器方法-keys()-values()-entries()-迭代方法-every()-some()-filter()-map()-forEach()</a></p><h2 id="复制填充方法-【改变原数组】【es6】" tabindex="-1">复制填充方法 【改变原数组】【ES6】 <a class="header-anchor" href="#复制填充方法-【改变原数组】【es6】" aria-hidden="true">#</a></h2><ol><li><p><code>copyWith(target[, start[, end]])</code> [复制数组的一部分到同一数组中的另一个位置] 【返回修改后的数组】</p></li><li><p><code>fill(target[, start[, end]])</code> [固定值填充一个数组] 【返回修改后的数组】</p></li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copyWithin</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//[4, 5, 6, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arr1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fill</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr1)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [1, 0, 0, 0, 0, 6, 7, 8, 9]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(a)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [1, 0, 0, 0, 0, 6, 7, 8, 9]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="拓展运算符-【es6】" tabindex="-1">拓展运算符<code>...</code>【ES6】 <a class="header-anchor" href="#拓展运算符-【es6】" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> colors </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pink</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> colors1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">white</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">grey</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> colors2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">colors</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">colors1]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(colors2)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [ &#39;green&#39;, &#39;red&#39;, &#39;pink&#39;, &#39;white&#39;, &#39;grey&#39; ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,75);function h(u,b,m,v,g,f){const n=r,l=p,e=o;return c(),i("div",null,[A,d,s(n,{readTime:"7",words:"2.2k"}),F,s(l),s(e)])}const w=t(D,[["render",h]]);export{j as __pageData,w as default};
