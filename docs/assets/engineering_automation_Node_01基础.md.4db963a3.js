import{_ as p,a as o}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.3dcd3b9e.js";import{_ as r}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.358bd1c3.js";import{_ as t,o as c,c as i,D as s,x as n,a as d,Q as y}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const E=JSON.parse('{"title":"起步","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装与运行","slug":"安装与运行","link":"#安装与运行","children":[]},{"level":2,"title":"版本管理","slug":"版本管理","link":"#版本管理","children":[]},{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[{"level":3,"title":"异步I/O","slug":"异步i-o","link":"#异步i-o","children":[]},{"level":3,"title":"单线程","slug":"单线程","link":"#单线程","children":[{"level":4,"title":"多进程的浏览器","slug":"多进程的浏览器","link":"#多进程的浏览器","children":[]}]},{"level":3,"title":"跨平台","slug":"跨平台","link":"#跨平台","children":[]}]},{"level":2,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]},{"level":2,"title":"CommonJS 规范","slug":"commonjs-规范","link":"#commonjs-规范","children":[{"level":3,"title":"机制","slug":"机制","link":"#机制","children":[]},{"level":3,"title":"加载方式","slug":"加载方式","link":"#加载方式","children":[]},{"level":3,"title":"npm 包查找原则","slug":"npm-包查找原则","link":"#npm-包查找原则","children":[]},{"level":3,"title":"npm 缓存","slug":"npm-缓存","link":"#npm-缓存","children":[]}]},{"level":2,"title":"其他模块化规范","slug":"其他模块化规范","link":"#其他模块化规范","children":[]},{"level":2,"title":"ES Modules (ESM)","slug":"es-modules-esm","link":"#es-modules-esm","children":[]},{"level":2,"title":"CommonJS VS ESM","slug":"commonjs-vs-esm","link":"#commonjs-vs-esm","children":[{"level":4,"title":"CommonJS：值的拷贝","slug":"commonjs-值的拷贝","link":"#commonjs-值的拷贝","children":[]},{"level":4,"title":"ESM：值的引用","slug":"esm-值的引用","link":"#esm-值的引用","children":[]}]},{"level":2,"title":"常用模块介绍","slug":"常用模块介绍","link":"#常用模块介绍","children":[]},{"level":2,"title":"npm","slug":"npm","link":"#npm","children":[]},{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":2,"title":"package.json","slug":"package-json","link":"#package-json","children":[]},{"level":2,"title":"版本命名规范","slug":"版本命名规范","link":"#版本命名规范","children":[]},{"level":2,"title":"第三方依赖","slug":"第三方依赖","link":"#第三方依赖","children":[]},{"level":2,"title":"依赖","slug":"依赖","link":"#依赖","children":[]},{"level":2,"title":"私有npm","slug":"私有npm","link":"#私有npm","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"engineering/automation/Node/01基础.md","lastUpdated":null}'),D={name:"engineering/automation/Node/01基础.md"},m=n("h1",{id:"起步",tabindex:"-1"},[d("起步 "),n("a",{class:"header-anchor",href:"#起步","aria-hidden":"true"},"#")],-1),F=y(`<p>Node.js 是一个基于 Google V8引擎的、跨平台的JavaScript<strong>运行环境</strong>（不是一门编程语言）</p><h2 id="安装与运行" tabindex="-1">安装与运行 <a class="header-anchor" href="#安装与运行" aria-hidden="true">#</a></h2><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noreferrer">https://nodejs.org/zh-cn/</a></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7a19e23aa504a97bb00b0cbd8530f6f~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>建议使用LTS版本，一键傻瓜式下载安装</p><p>简单写一个Node.js的程序</p><p>index.js用来读取文件package.json文件</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> readFile </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./package.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">},(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>运行程序</p><div class="language-powershell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">node index.js</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/292c5feb49f24a5db3e02157a2a93c6a~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h2 id="版本管理" tabindex="-1">版本管理 <a class="header-anchor" href="#版本管理" aria-hidden="true">#</a></h2><p>node的版本那么多， 在同一个设备上如何快速切换Node.js 版本？</p><p>可以使用版本管理工具</p><ul><li>n: 一个npm 全局的开源包，是依赖npm 来全局安装、使用的</li><li>fnm: 快速简单，兼容性支持 .node-version和.nvmrc文件</li><li>nvm: 独立的软件包，Node Version Manager</li></ul><p>nvm用的比较多（是macOS平台的软件） Windows可以下载<a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noreferrer">nvm-windows</a></p><p>详细教程可见<a href="https://www.runoob.com/w3cnote/nvm-manager-node-versions.html" target="_blank" rel="noreferrer">https://www.runoob.com/w3cnote/nvm-manager-node-versions.html</a></p><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-hidden="true">#</a></h2><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/edd08dd7439341c7bedbf8b8b8267342~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="异步i-o" tabindex="-1">异步I/O <a class="header-anchor" href="#异步i-o" aria-hidden="true">#</a></h3><p>当Node.js执行I/O操作时，会在响应返回并恢复操作，而不是阻塞线程并浪费CPU（循环等待）</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/197809289b304eb8a361f7eb1cdd4733~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>这里的I/O不仅指文件的读写，也包括对网络的请求，对数据库的操作等</p><p><strong>代码编写顺序与执行顺序无关</strong>，看下面这例子</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> readFile </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./node基础/package.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">encoding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">我是在最下面编写的代码</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/012107c405404058bc90b4fd2926e62b~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="单线程" tabindex="-1">单线程 <a class="header-anchor" href="#单线程" aria-hidden="true">#</a></h3><p>Node.js 保持了JavaScript 在浏览器中单线程的特点</p><p>优点：</p><ul><li>不用处处在意状态同步问题，不会发生死锁</li><li>没有线程上下文切换带来的性能开销</li></ul><p>缺点：(解决方案会在下一篇博文中说明)</p><ul><li>无法利用多核CPU</li><li>错误会引起整个应用退出，健壮性不足</li><li>大量计算占用导致CPU，无法继续执</li></ul><h4 id="多进程的浏览器" tabindex="-1">多进程的浏览器 <a class="header-anchor" href="#多进程的浏览器" aria-hidden="true">#</a></h4><p>浏览器是<strong>多进程</strong>，JS引擎<strong>单线程</strong></p><ul><li><p>Browser 进程：浏览器主进程，只有一个</p></li><li><p>插件进程：插件使用时才创建</p></li><li><p>GPU 进程：最多一个用于3D 绘制</p></li><li><p>渲染进程：页面渲染、JS执行、事件处理</p><ul><li>GUI 渲染线程</li><li>JS 引擎线程 （V8）</li><li>事件触发线程</li><li>定时器触发线程</li><li>异步请求线程</li></ul></li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab566938d7254575a6be5a225161df63~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="跨平台" tabindex="-1">跨平台 <a class="header-anchor" href="#跨平台" aria-hidden="true">#</a></h3><p>兼容 Windows 和 *nix 平台，主要得益于在操作系统与 Node 上层模块系统之间构建了一层平台架构</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/43173c55494d496ea4571f4d32ce1f3f~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>底层都是C/C++写的，应用层才是JavaScript写的</p><h2 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-hidden="true">#</a></h2><p>Node.js在大部分领域都占有一席之地，尤其是<strong>I/O密集</strong>型的任务（而非<strong>计算密集</strong>型任务）</p><ul><li>Web应用：Express / Koa</li><li>前端构建：Webpack</li><li>GUI 客户端软件：VSCode / 网易云音乐</li><li>其它：实时通讯、爬虫、CLI 等...</li></ul><h1 id="模块化机制" tabindex="-1">模块化机制 <a class="header-anchor" href="#模块化机制" aria-hidden="true">#</a></h1><ol><li>What 何为模块化？</li></ol><p>根据功能或业务将一个大程序拆分成互相依赖的小文件，再用简单的方式拼装起来</p><ol start="2"><li>Why 为什么模块化？无模块化问题</li></ol><ul><li>所有 <code>script</code> 标签必须保证顺序正确，否则会依赖报错</li><li>全局变量存在命名冲突，占用内存无法被回收</li><li><code>IIFE</code>/<code>namespace</code> 会导致代码可读性低等诸多问题</li></ul><h2 id="commonjs-规范" tabindex="-1">CommonJS 规范 <a class="header-anchor" href="#commonjs-规范" aria-hidden="true">#</a></h2><p>Node.js 支持CommonJS 模块规范，采用<strong>同步机制</strong>加载模块</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6e8575f96b834e53a67ceb0e3c94571d~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>greeting.js导出模块</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> prefix </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sayHi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">prefix</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> world</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  sayHi</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>index.js导入模块</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> sayHi </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./greeting</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">sayHi</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9135c0d98e9041d083cea1a744c4c5df~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="机制" tabindex="-1">机制 <a class="header-anchor" href="#机制" aria-hidden="true">#</a></h3><p>我们来研究一下模块化的机制</p><p>导出模块的时候不仅可以这样</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  sayHi</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>也可以这样</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#A6ACCD;">sayHi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sayHi</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>为什么可以这样呢？ 在node中exports和module.exports指向的是同一块内存引用</p><p><code>exports = module.exports = {}</code></p><p>CommonJS 中 <code>exports</code>、<code>require</code>、<code>module</code>、<code>__filename</code>、<code>__dirname</code> 变量 到底是什么</p><p>我们在暴露我们的模块的时候node会在外面包一层函数，会注入一些模块变量，所以我们可以在模块中直接使用</p><p>我们将刚刚的sayHi函数改成一个箭头函数，输出arguments（因为箭头函数没有argumengts，所以会向外查找）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sayHi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">arguments</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#A6ACCD;">sayHi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sayHi</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e058b4d5a87f436787c7502d0b649b7a~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>这五个参数分别对应着<code>exports</code>、<code>require</code>、<code>module</code>、<code>__filename</code>、<code>__dirname</code></p><p>所以说Node在外面包裹的一个函数就是这样就是这样</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">exports</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">require</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">module</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">__filename</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">__dirname</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">m</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">moudule</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">exports</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">m</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="加载方式" tabindex="-1">加载方式 <a class="header-anchor" href="#加载方式" aria-hidden="true">#</a></h3><ol><li>加载内置模块</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>加载相对、绝对路径的文件模块</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 绝对</span></span>
<span class="line"><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/User/.../file.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 相对</span></span>
<span class="line"><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./file.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="3"><li>加载npm包</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lodash</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="npm-包查找原则" tabindex="-1">npm 包查找原则 <a class="header-anchor" href="#npm-包查找原则" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lodash</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/80b5a5a9dd444c83bb14d758adba87da~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><ol><li>当前目录 node_modules</li><li>如果没有，父级目录的 node_modules</li><li>如果没有，沿着路径向上递归，直到根目录下 node_modules</li><li>找到之后会加载package.json main 指向的文件，如果没有package.json 则依次查找index.js、index.json、index.node</li></ol><h3 id="npm-缓存" tabindex="-1">npm 缓存 <a class="header-anchor" href="#npm-缓存" aria-hidden="true">#</a></h3><p>require.cache 中缓存着加载过的模块，缓存的原因：同步加载</p><ol><li><p>文件模块查找耗时，如果每次require 都需要重新遍历查找，性能会比较差；</p></li><li><p>在实际开发中，模块可能包含副作用代码</p></li></ol><p>有缓存</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mod1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mod2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(mod1 </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> mod2)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>无缓存</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">requireUnChched</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">module</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">delete</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">require</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cache</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">require</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">module</span><span style="color:#F07178;">)]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">module</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mod3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">requireUnChched</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(mod1 </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> mod3)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="其他模块化规范" tabindex="-1">其他模块化规范 <a class="header-anchor" href="#其他模块化规范" aria-hidden="true">#</a></h2><ul><li>AMD 是RequireJS 在推广过程中规范化产出，<strong>异步</strong>加载，推崇依赖前置；</li><li>CMD 是SeaJS 在推广过程中规范化产出，<strong>异步</strong>加载，推崇就近依赖；</li><li>UMD (Universal Module Definition) 规范，兼容AMD 和CommonJS 模式</li><li>ES Modules (ESM)，语言层面的模块化规范，与环境无关，可借助babel 编译</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5d37f1fa1aba488fb4ecb11b60e413b8~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d06b519a984a4554933422e296f448c7~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h2 id="es-modules-esm" tabindex="-1">ES Modules (ESM) <a class="header-anchor" href="#es-modules-esm" aria-hidden="true">#</a></h2><ul><li>ESM 是在ES6 <strong>语言层面</strong>提出的一种模块化标准；</li><li>ESM中主要有<code>import</code>、<code>export</code>两个关键词，不能<code>console</code>打印两个关键词</li><li>可以实现Tree Shaking</li></ul><p><strong>在node环境中如何使用ESM呢？将文件名后缀改成<code>.mjs</code>即可</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c0380b47e99f436fbf8ca636d644e10c~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>不想改文件名后缀，也可以在项目的package.json中加一个<code>type=module *.js</code></p><p>还可以使用babel编译转成ES5后使用（浏览器、node）</p><h2 id="commonjs-vs-esm" tabindex="-1">CommonJS VS ESM <a class="header-anchor" href="#commonjs-vs-esm" aria-hidden="true">#</a></h2><ul><li>CommonJS 模块输出的是一个值的<strong>拷贝</strong>；ESM 模块输出的是值的<strong>引用</strong></li><li>CommonJS 模块是<strong>运行时</strong>加载；ESM 模块是<strong>编译时</strong>输出(提前加载)</li><li>可以混用，但是不建议( import commonjs || import 中require)</li></ul><p>同样的代码在使用不同的模块化机制输出可能不用，我们看下面的例子</p><h4 id="commonjs-值的拷贝" tabindex="-1">CommonJS：值的<strong>拷贝</strong> <a class="header-anchor" href="#commonjs-值的拷贝" aria-hidden="true">#</a></h4><p>lib.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> counter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addCounter</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">counter</span><span style="color:#89DDFF;">++</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  counter</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  addCounter</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>main.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> counter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> addCounter </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./lib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(counter)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"><span style="color:#82AAFF;">addCounter</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(counter)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="esm-值的引用" tabindex="-1">ESM：值的<strong>引用</strong> <a class="header-anchor" href="#esm-值的引用" aria-hidden="true">#</a></h4><p>lib.mjs</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> counter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addCounter</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">counter</span><span style="color:#89DDFF;">++</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>mian.mjs</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">counter</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">addCounter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./lib.mjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(counter)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3 </span></span>
<span class="line"><span style="color:#82AAFF;">addCounter</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(counter)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 4</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>如果上面的counter定义为一个对象，比如</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> countet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">number</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此时，两种模块化的结果就是一样的</p><h2 id="常用模块介绍" tabindex="-1">常用模块介绍 <a class="header-anchor" href="#常用模块介绍" aria-hidden="true">#</a></h2><p>更多内容请见官网 <a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">https://nodejs.org/en/</a></p><p>文件操作模块 <img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7e7488af522e4d7babf79da914a48ce1~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>路径模块 <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e200e832aa134a23ac7dc3e374083684~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>os模块 <img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/09e745c390b2400a996636ee3656209f~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h1 id="包管理机制" tabindex="-1">包管理机制 <a class="header-anchor" href="#包管理机制" aria-hidden="true">#</a></h1><h2 id="npm" tabindex="-1">npm <a class="header-anchor" href="#npm" aria-hidden="true">#</a></h2><p>NPM 是Node.js 中的包管理器，提供了安装、删除等其它命令来管理包</p><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-hidden="true">#</a></h2><div class="language-powershell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm init</span></span>
<span class="line"><span style="color:#A6ACCD;">npm config</span></span>
<span class="line"><span style="color:#A6ACCD;">npm run </span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">cmd</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install </span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">pkg</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">npm uninstall </span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">pkg</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">npm update </span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">pkg</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">npm info </span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">pkg</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">npm publish</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6fb9f7d8b07b45b2b567a724bd90b37e~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h2 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-hidden="true">#</a></h2><ul><li>name 包名称</li><li>version 版本号</li><li>main 入口文件</li><li>scripts 执行脚本</li><li>dependencies 线上依赖</li><li>devDependencies 开发依赖</li><li>repository 代码托管地址</li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/318fc35cda2b42b8ae7f49e9db8f0c38~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>更多 <a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json" target="_blank" rel="noreferrer">https://docs.npmjs.com/cli/v7/configuring-npm/package-json</a></p><h2 id="版本命名规范" tabindex="-1">版本命名规范 <a class="header-anchor" href="#版本命名规范" aria-hidden="true">#</a></h2><ul><li>1.0.0 Must match version exactly</li><li>&gt;1.0.0 Must be greater than version</li><li>&gt;=1.0.0 etc</li><li>~1.2.0 &quot;Approximately equivalent to version&quot; See <a href="https://github.com/npm/node-semver" target="_blank" rel="noreferrer">semver</a></li><li>^1.2.0 &quot;Compagble with version&quot; See <a href="https://github.com/npm/node-semver" target="_blank" rel="noreferrer">semver</a></li><li>1.2.x 1.2.0, 1.2.1, etc., but not 1.3.0</li><li>* Matches any version</li></ul><p>npm semver check <a href="https://semver.npmjs.com/" target="_blank" rel="noreferrer">https://semver.npmjs.com/ </a></p><h2 id="第三方依赖" tabindex="-1">第三方依赖 <a class="header-anchor" href="#第三方依赖" aria-hidden="true">#</a></h2><ul><li>hip://... See &#39;URLs as Dependencies&#39; below</li><li>git... See &#39;Git URLs as Dependencies&#39; below</li><li>user/repo See &#39;GitHub URLs&#39; below</li><li>path/path/path See <a href="https://github.com/npm/node-semver" target="_blank" rel="noreferrer">Local Paths</a> below</li></ul><h2 id="依赖" tabindex="-1">依赖 <a class="header-anchor" href="#依赖" aria-hidden="true">#</a></h2><ul><li>dependencies 业务依赖，应用发布后正常执行所需要的包</li><li>devDependencies 开发依赖，只用于开发环境</li><li>peerDependencies 同等依赖，比如一个webpack 插件依赖特定版本的webpack</li><li>bundledDependencies 打包依赖(npm run pack)，必须已经在devDep 或者dep声明过</li><li>optionalDependencies 可选依赖</li></ul><h2 id="私有npm" tabindex="-1">私有npm <a class="header-anchor" href="#私有npm" aria-hidden="true">#</a></h2><p>如果不想公开一些包，可以用私有npm</p><ul><li>镜像公司内部私有npm</li><li>镜像设置 <code>npm config set registry=hips://bnpm.byted.org </code></li></ul><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-hidden="true">#</a></h2><p>早期的包管理机制问题比较多</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/81c25bca05554f77a18d688bac4463c4~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>旧包管理机制的一些特性</p><ul><li>并行安装</li><li>扁平管理</li><li>锁文件(lockfile)</li><li>缓存优化</li></ul><p>新的解决方案</p><ul><li>npm7 | yarn =&gt; lock/扁平/缓存...</li><li>pnpm =&gt; monorepo/硬、符号链接/安全性高...</li></ul><h1 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h1><ul><li>字节跳动青训营PPT + 视频</li><li>《深入浅出Node.js》</li><li>Node中文官网 <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noreferrer">https://nodejs.org/zh-cn/</a></li><li><a href="https://www.runoob.com/w3cnote/nvm-manager-node-versions.html" target="_blank" rel="noreferrer">菜鸟教程nvm</a></li></ul><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,151);function u(C,b,A,h,g,f){const a=r,l=p,e=o;return c(),i("div",null,[m,s(a,{readTime:"9",words:"2.4k"}),F,s(l),s(e)])}const w=t(D,[["render",u]]);export{E as __pageData,w as default};
