import{_ as p,a as e}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.3dcd3b9e.js";import{_ as t}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.b6ca37c5.js";import{_ as r,o as c,c as y,D as a,x as s,a as i,Q as D}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const q=JSON.parse('{"title":"1. 基本使用","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.1 创建Symbol","slug":"_1-1-创建symbol","link":"#_1-1-创建symbol","children":[]},{"level":2,"title":"1.2 性质","slug":"_1-2-性质","link":"#_1-2-性质","children":[]},{"level":2,"title":"2.1 给对象添加属性和方法","slug":"_2-1-给对象添加属性和方法","link":"#_2-1-给对象添加属性和方法","children":[]},{"level":2,"title":"Symbol.hasInstance","slug":"symbol-hasinstance","link":"#symbol-hasinstance","children":[]},{"level":2,"title":"Symbol.isConcatSpreadable","slug":"symbol-isconcatspreadable","link":"#symbol-isconcatspreadable","children":[]},{"level":2,"title":"Symbol.iterator","slug":"symbol-iterator","link":"#symbol-iterator","children":[]},{"level":2,"title":"Symbol.toStringTag","slug":"symbol-tostringtag","link":"#symbol-tostringtag","children":[]},{"level":2,"title":"Symbol.match","slug":"symbol-match","link":"#symbol-match","children":[]},{"level":2,"title":"Symbol.replace","slug":"symbol-replace","link":"#symbol-replace","children":[]},{"level":2,"title":"Symbol.search","slug":"symbol-search","link":"#symbol-search","children":[]},{"level":2,"title":"Symbol.split","slug":"symbol-split","link":"#symbol-split","children":[]},{"level":2,"title":"Symbol.toPrimitive","slug":"symbol-toprimitive","link":"#symbol-toprimitive","children":[]},{"level":2,"title":"Symbol.species","slug":"symbol-species","link":"#symbol-species","children":[]},{"level":2,"title":"Symbol.asyncIterator","slug":"symbol-asynciterator","link":"#symbol-asynciterator","children":[]},{"level":2,"title":"Symbol.unscopables","slug":"symbol-unscopables","link":"#symbol-unscopables","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"basics/ES6/13Symbol.md","lastUpdated":1678883566000}'),F={name:"basics/ES6/13Symbol.md"},A=s("blockquote",null,[s("p",null,"Symbol是原始值，且Symbol实例是唯一、不可变的。Symbol的用途是确保对象属性使用唯一标识符，不会发生属性冲突的危险")],-1),C=s("h1",{id:"_1-基本使用",tabindex:"-1"},[i("1. 基本使用 "),s("a",{class:"header-anchor",href:"#_1-基本使用","aria-hidden":"true"},"#")],-1),b=D(`<h2 id="_1-1-创建symbol" tabindex="-1">1.1 创建Symbol <a class="header-anchor" href="#_1-1-创建symbol" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> s)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Symbol() &quot;symbol&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> s2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YK菌</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> s3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YK菌</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(s2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> s2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> s2</span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;">s3)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Symbol(YK菌) &quot;symbol&quot; false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> s4 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Symbol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YK菌</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> s5 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Symbol</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YK菌</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(s4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> s4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> s4</span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;">s5)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Symbol(YK菌) &quot;symbol&quot; true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_1-2-性质" tabindex="-1">1.2 性质 <a class="header-anchor" href="#_1-2-性质" aria-hidden="true">#</a></h2><ol><li>Symbol的值是唯一的，用来解决命名冲突的问题</li><li>Symbol值不能与其他数据进行运算</li><li>Symbol定义的对象属性不能使用 for…in循环遍历，但是可以使用Reflect.ownKeys来获取对象的所有键名</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> result1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// TypeError: Cannot convert a Symbol value to a number</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> result2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// TypeError: Cannot convert a Symbol value to a number</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> result3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">100</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// TypeError: Cannot convert a Symbol value to a string</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> result4 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// TypeError: Cannot convert a Symbol value to a number</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h1 id="_2-基本应用" tabindex="-1">2. 基本应用 <a class="header-anchor" href="#_2-基本应用" aria-hidden="true">#</a></h1><h2 id="_2-1-给对象添加属性和方法" tabindex="-1">2.1 给对象添加属性和方法 <a class="header-anchor" href="#_2-1-给对象添加属性和方法" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 向game对象中添加方法up, down</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> game </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">俄罗斯方块</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">up</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">上升</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">down</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">下降</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 声明一个对象</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> methods </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">up</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">up</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">down</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">down</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 添加方法</span></span>
<span class="line"><span style="color:#A6ACCD;">game[methods</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">up] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">methods.up改变形状</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">game[methods</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">down] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">methods.down快速下降</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(game)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// down: ƒ ()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// name: &quot;俄罗斯方块&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// up: ƒ ()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Symbol(down): ƒ ()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Symbol(up): ƒ ()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> game </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">狼人杀</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">[</span><span style="color:#82AAFF;">Symbol</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">say</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)]</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">发言</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">[</span><span style="color:#82AAFF;">Symbol</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">zibao</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)]</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">自爆</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(game)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// {name: &quot;狼人杀&quot;, Symbol(say): ƒ, Symbol(zibao): ƒ}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h1 id="_3-symbol内置值-well-known-symbol" tabindex="-1">3. Symbol内置值（well-known symbol） <a class="header-anchor" href="#_3-symbol内置值-well-known-symbol" aria-hidden="true">#</a></h1><blockquote><p>ECMAScript 6也引入了一批常用内置符号（well-known symbol），用于暴露语言内部行为，开发者可以直接访问、重写或模拟这些行为。</p></blockquote><h2 id="symbol-hasinstance" tabindex="-1">Symbol.hasInstance <a class="header-anchor" href="#symbol-hasinstance" aria-hidden="true">#</a></h2><blockquote><p>一个方法，该方法决定一个构造器对象是否认可一个对象是它的实例。由instanceof操作符使用</p></blockquote><p>instanceof操作符可以用来确定一个对象实例的原型链上是否有原型 当其他对象使用instanceof运算符，判断是否为该对象的实例时，会调用这个方法</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> [Symbol</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hasInstance]</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">param</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">param</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">我被用来检测类型</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> o </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(o </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// {} &#39;我被用来检测类型&#39; true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="symbol-isconcatspreadable" tabindex="-1">Symbol.isConcatSpreadable <a class="header-anchor" href="#symbol-isconcatspreadable" aria-hidden="true">#</a></h2><blockquote><p>一个布尔值，如果是true，则意味着对象应该用Array.prototype.concat()打平其数组元素”</p></blockquote><p>ES6中的Array.prototype.concat()方法会根据接收到的对象类型选择如何将一个类数组对象拼接成数组实例。覆盖Symbol.isConcatSpreadable的值可以修改这个行为 对象的Symbol.isConcatSpreadable属性等于的是一个布尔值，表示该对象用于 Array.prototype.concat()时，是否可以展开</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#A6ACCD;">(arr2))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [1, 2, 3, 4, 5, 6]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">arr2[Symbol</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isConcatSpreadable] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#A6ACCD;">(arr2))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//[1, 2, 3, [4, 5, 6]]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="symbol-iterator" tabindex="-1">Symbol.iterator <a class="header-anchor" href="#symbol-iterator" aria-hidden="true">#</a></h2><blockquote><p>一个方法，该方法返回对象默认的迭代器。由for-of语句使用</p></blockquote><h2 id="symbol-tostringtag" tabindex="-1">Symbol.toStringTag <a class="header-anchor" href="#symbol-tostringtag" aria-hidden="true">#</a></h2><blockquote><p>一个字符串，该字符串用于创建对象的默认字符串描述。由内置方法Object.prototype.toString()使用</p></blockquote><h2 id="symbol-match" tabindex="-1">Symbol.match <a class="header-anchor" href="#symbol-match" aria-hidden="true">#</a></h2><blockquote><p>一个正则表达式方法，该方法用正则表达式去匹配字符串。由String.prototype.match()方法使用</p></blockquote><h2 id="symbol-replace" tabindex="-1">Symbol.replace <a class="header-anchor" href="#symbol-replace" aria-hidden="true">#</a></h2><blockquote><p>一个正则表达式方法，该方法替换一个字符串中匹配的子串。由String.prototype.replace()方法使用</p></blockquote><h2 id="symbol-search" tabindex="-1">Symbol.search <a class="header-anchor" href="#symbol-search" aria-hidden="true">#</a></h2><blockquote><p>一个正则表达式方法，该方法返回字符串中匹配正则表达式的索引。由String.prototype.search()方法使用</p></blockquote><h2 id="symbol-split" tabindex="-1">Symbol.split <a class="header-anchor" href="#symbol-split" aria-hidden="true">#</a></h2><blockquote><p>一个正则表达式方法，该方法在匹配正则表达式的索引位置拆分字符串。由String.prototype.split()方法使用</p></blockquote><h2 id="symbol-toprimitive" tabindex="-1">Symbol.toPrimitive <a class="header-anchor" href="#symbol-toprimitive" aria-hidden="true">#</a></h2><blockquote><p>一个方法，该方法将对象转换为相应的原始值。由ToPrimitive抽象操作使用</p></blockquote><h2 id="symbol-species" tabindex="-1">Symbol.species <a class="header-anchor" href="#symbol-species" aria-hidden="true">#</a></h2><blockquote><p>一个函数值，该函数作为创建派生对象的构造函数</p></blockquote><h2 id="symbol-asynciterator" tabindex="-1">Symbol.asyncIterator <a class="header-anchor" href="#symbol-asynciterator" aria-hidden="true">#</a></h2><blockquote><p>一个方法，该方法返回对象默认的AsyncIterator。由for-await-of语句使用</p></blockquote><p>这个符号表示实现异步迭代器API的函数</p><h2 id="symbol-unscopables" tabindex="-1">Symbol.unscopables <a class="header-anchor" href="#symbol-unscopables" aria-hidden="true">#</a></h2><blockquote><p>一个对象，该对象所有的以及继承的属性，都会从关联对象的with环境绑定中排除</p></blockquote><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,41);function m(u,d,h,g,S,f){const n=t,l=p,o=e;return c(),y("div",null,[A,C,a(n,{readTime:"3",words:"1k"}),b,a(l),a(o)])}const x=r(F,[["render",m]]);export{q as __pageData,x as default};
