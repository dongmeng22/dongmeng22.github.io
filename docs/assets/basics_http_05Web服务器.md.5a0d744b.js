import{_ as c,a as s}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.2d10c1d4.js";import{_ as o}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.63457685.js";import{_ as d,o as l,c as p,D as a,x as e,a as t,Q as _}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const w=JSON.parse('{"title":"1. 用单台虚拟主机实现多个域名","description":"","frontmatter":{},"headers":[{"level":2,"title":"2.1 代理","slug":"_2-1-代理","link":"#_2-1-代理","children":[{"level":3,"title":"2.1.1 缓存代理","slug":"_2-1-1-缓存代理","link":"#_2-1-1-缓存代理","children":[]},{"level":3,"title":"2.1.2 透明代理","slug":"_2-1-2-透明代理","link":"#_2-1-2-透明代理","children":[]}]},{"level":2,"title":"2.2 网关","slug":"_2-2-网关","link":"#_2-2-网关","children":[]},{"level":2,"title":"2.3 隧道","slug":"_2-3-隧道","link":"#_2-3-隧道","children":[]},{"level":2,"title":"3.1 缓存的有效期限","slug":"_3-1-缓存的有效期限","link":"#_3-1-缓存的有效期限","children":[]},{"level":2,"title":"3.2 客户端的缓存","slug":"_3-2-客户端的缓存","link":"#_3-2-客户端的缓存","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"basics/http/05Web服务器.md","lastUpdated":1678883566000}'),h={name:"basics/http/05Web服务器.md"},m=e("p",null,[t("@[toc] "),e("img",{src:"https://img-blog.csdnimg.cn/20210223111126871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk3MjAwOA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"})],-1),g=e("p",null,"@[toc]",-1),b=e("p",null,"@[toc]",-1),u=e("h1",{id:"_1-用单台虚拟主机实现多个域名",tabindex:"-1"},[t("1. 用单台虚拟主机实现多个域名 "),e("a",{class:"header-anchor",href:"#_1-用单台虚拟主机实现多个域名","aria-hidden":"true"},"#")],-1),f=_('<blockquote><p>HTTP/1.1规范允许一台HTTP服务器搭建多个Web站点</p></blockquote><ul><li><p>即使物理层面只有一台服务器，但只要使用虚拟主机的功能，则可以假想已具有多台服务器 <img src="https://img-blog.csdnimg.cn/20210223111453686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk3MjAwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>在相同的IP地址下，由于虚拟主机可以寄存多个不同主机名和域名的Web网站，因此在发送HTTP请求时，必须在Host首部内完整指定主机名或域名的URI <img src="https://img-blog.csdnimg.cn/img_convert/bd89192b0b68eb334c1ab22eef9fbe7d.png" alt="image"></p></li></ul><h1 id="_2-通信数据转发程序" tabindex="-1">2. 通信数据转发程序 <a class="header-anchor" href="#_2-通信数据转发程序" aria-hidden="true">#</a></h1><p>HTTP通信时，除客户端和服务器以外，还有一些用于通信数据转发的应用程序，例如代理、网关和隧道。它们可以配合服务器工作</p><h2 id="_2-1-代理" tabindex="-1">2.1 代理 <a class="header-anchor" href="#_2-1-代理" aria-hidden="true">#</a></h2><blockquote><p>代理是一种有转发功能的应用程序，它扮演了位于服务器和客户端“中间人”的角色，接收由客户端发送的请求并转发给服务器，同时也接收服务器返回的响应并转发给客户端</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/116a0e8d8cd853dc9059b3379cece293.png" alt="image"></p><p>代理不改变请求URL，会直接发送给前方持有资源的目标服务器</p><p><img src="https://img-blog.csdnimg.cn/img_convert/6cc1c115d39463c95f964fa028c33643.png" alt="image"></p><p>转发时，需要附加Via首部字段以标记出经过的主机信息</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8465bb9de4119442505d7042a85b1205.png" alt="image"></p><p>使用代理的理由：利用缓存技术减少网络带宽的流量，组织内部针对特定网站的访问控制，以获取访问日志为主要目的等</p><h3 id="_2-1-1-缓存代理" tabindex="-1">2.1.1 缓存代理 <a class="header-anchor" href="#_2-1-1-缓存代理" aria-hidden="true">#</a></h3><p>代理转发响应时，缓存代理（Caching Proxy）会预先将资源的副本（缓存）保存在代理服务器上</p><h3 id="_2-1-2-透明代理" tabindex="-1">2.1.2 透明代理 <a class="header-anchor" href="#_2-1-2-透明代理" aria-hidden="true">#</a></h3><p>转发请求或响应时，不对报文做任何加工的代理类型被称为透明代理（Transparent Proxy）。反之，对报文内容进行加工的代理被称为非透明代理。</p><h2 id="_2-2-网关" tabindex="-1">2.2 网关 <a class="header-anchor" href="#_2-2-网关" aria-hidden="true">#</a></h2><blockquote><p>网关是转发其他服务器通信数据的服务器，接收从客户端发送来的请求时，它就像自己拥有资源的源服务器一样对请求进行处理。有时客户端可能都不会察觉，自己的通信目标是一个网关</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/578bf60ad38fd4a4be38e106a3f20ece.png" alt="image"></p><p>利用网关可以由HTTP请求转化为其他协议通信</p><p>利用网关能提高通信的安全性，因为可以在客户端与网关之间的通信线路上加密以确保连接的安全。比如，网关可以连接数据库，使用SQL语句查询数据。另外，在Web购物网站上进行信用卡结算时，网关可以和信用卡结算系统联动</p><h2 id="_2-3-隧道" tabindex="-1">2.3 隧道 <a class="header-anchor" href="#_2-3-隧道" aria-hidden="true">#</a></h2><blockquote><p>隧道是在相隔甚远的客户端和服务器两者之间进行中转，并保持双方通信连接的应用程序，届时使用SSL等加密手段进行通信。隧道的目的是确保客户端能与服务器进行安全的通信</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/97d7d161ff0dfa88a21e7545cde0e95e.png" alt="image"></p><p>隧道本身不会去解析HTTP请求。也就是说，请求保持原样中转给之后的服务器。隧道会在通信双方断开连接时结束</p><h1 id="_3-保存资源的缓存" tabindex="-1">3. 保存资源的缓存 <a class="header-anchor" href="#_3-保存资源的缓存" aria-hidden="true">#</a></h1><p>缓存服务器的优势在于利用缓存可避免多次从源服务器转发资源。因此客户端可就近从缓存服务器上获取资源，而源服务器也不必多次处理相同的请求了</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8db86800b03156471d04f4412b96e866.png" alt="image"></p><h2 id="_3-1-缓存的有效期限" tabindex="-1">3.1 缓存的有效期限 <a class="header-anchor" href="#_3-1-缓存的有效期限" aria-hidden="true">#</a></h2><p><img src="https://img-blog.csdnimg.cn/20210223111534794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk3MjAwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="_3-2-客户端的缓存" tabindex="-1">3.2 客户端的缓存 <a class="header-anchor" href="#_3-2-客户端的缓存" aria-hidden="true">#</a></h2><p>以InternetExplorer程序为例，把客户端缓存称为临时网络文件（Temporary InternetFile） <img src="https://img-blog.csdnimg.cn/20210223111556180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk3MjAwOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>',33);function k(F,x,T,v,G,Z){const i=o,r=c,n=s;return l(),p("div",null,[m,g,b,u,a(i,{readTime:"3",words:"1k"}),f,a(r),a(n)])}const P=d(h,[["render",k]]);export{w as __pageData,P as default};
