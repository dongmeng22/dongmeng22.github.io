import{_ as n,a as r}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.2d10c1d4.js";import{_ as l}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.63457685.js";import{_ as i,o,c,D as s,x as a,a as d,Q as g}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const F=JSON.parse('{"title":"TS概述","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、学习TypeScript的意义","slug":"一、学习typescript的意义","link":"#一、学习typescript的意义","children":[{"level":3,"title":"1. 强类型 VS 弱类型","slug":"_1-强类型-vs-弱类型","link":"#_1-强类型-vs-弱类型","children":[]},{"level":3,"title":"2. 静态语言 VS 动态语言","slug":"_2-静态语言-vs-动态语言","link":"#_2-静态语言-vs-动态语言","children":[]}]},{"level":2,"title":"二、TypeScript特性","slug":"二、typescript特性","link":"#二、typescript特性","children":[]},{"level":2,"title":"三、搭建TypeScript环境","slug":"三、搭建typescript环境","link":"#三、搭建typescript环境","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"advance/typescript/basics/01概述.md","lastUpdated":1678883566000}'),h={name:"advance/typescript/basics/01概述.md"},b=a("h1",{id:"ts概述",tabindex:"-1"},[d("TS概述 "),a("a",{class:"header-anchor",href:"#ts概述","aria-hidden":"true"},"#")],-1),y=g(`<p>参考链接：</p><ul><li>官网：<a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">https://www.typescriptlang.org/</a></li><li>中文网：<a href="https://www.tslang.cn/" target="_blank" rel="noreferrer">https://www.tslang.cn/</a> （貌似很久没维护了）</li><li>掘金小册： <a href="https://juejin.cn/book/6844733813021491207" target="_blank" rel="noreferrer">https://juejin.cn/book/6844733813021491207</a></li><li>书籍：《深入理解TypeScript》 <a href="https://jkchao.github.io/typescript-book-chinese/" target="_blank" rel="noreferrer">https://jkchao.github.io/typescript-book-chinese/</a></li><li>B站尚硅谷视频：<a href="https://www.bilibili.com/video/BV1Xy4y1v7S2" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1Xy4y1v7S2</a></li></ul><h2 id="一、学习typescript的意义" tabindex="-1">一、学习TypeScript的意义 <a class="header-anchor" href="#一、学习typescript的意义" aria-hidden="true">#</a></h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/674754547fd14767b56610dcb0517c94~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><ul><li>为JavaScript提供可选的类型系统</li><li>兼容当前及未来的JavaScript的特性</li></ul><p>给JavaScript加上类型系统的意义</p><ol><li>类型有利于代码的重构，有利于编译器在编译时而不是运行时捕获错误；</li><li>类型是出色的文档形式之一，函数签名是一个定理，而函数体是具体的实现。</li></ol><h3 id="_1-强类型-vs-弱类型" tabindex="-1">1. 强类型 VS 弱类型 <a class="header-anchor" href="#_1-强类型-vs-弱类型" aria-hidden="true">#</a></h3><p>我们都知道JavaScript是一门弱类型的语言，也就是说，我们定义一个变量，不需要考虑它的类型，比如我们定义一个变量<code>a</code>，给它赋值为<code>1</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后我们可以把它赋值为一个字符串、数组、对象等等任意类型</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">yk</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YK</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这样做虽然写起来很爽，不会报错，但是会有很多隐患。如果代码出现问题，很难找到问题出在哪里。</p><p>强类型语言的特点就是<strong>不允许改变变量的数据类型，除非进行强制类型转换</strong></p><p>弱类型的一个特点就是<strong>在计算时，不同类型之间对使用者透明地对变量进行隐式转换。</strong> 也就是说<strong>变量可以被赋予不同的数据类型</strong></p><h3 id="_2-静态语言-vs-动态语言" tabindex="-1">2. 静态语言 VS 动态语言 <a class="header-anchor" href="#_2-静态语言-vs-动态语言" aria-hidden="true">#</a></h3><p>都说JavaScript是动态语言，而Java是静态语言，那他们的区别到底是什么呢？</p><blockquote><p>一门语言在编译时报错，那么是<strong>静态语言</strong>，如果在运行时报错，那么是<strong>动态语言</strong>。</p></blockquote><p>用官方一点的话说就是</p><blockquote><p>在<strong>编译</strong>阶段确定所有变量的类型的是<strong>静态</strong>类型语言；在<strong>执行</strong>阶段确定所有变量的类型的是<strong>动态</strong>类型语言。</p></blockquote><p>所以说，类型有利于代码的重构，它有利于编译器在编译时而不是运行时捕获错误。我们在编写代码的时候就能避免很多错误，这样可以提高我们编码(<s>找bug</s>)的效率！</p><p>最后来个对比表格</p><table><thead><tr><th>静态类型语言</th><th>动态类型语言</th></tr></thead><tbody><tr><td>对类型极度严格</td><td>对类型非常宽松</td></tr><tr><td>立即发现错误</td><td>不能立即发现（单元测试）</td></tr><tr><td>运行时性能好</td><td>运行时性能差（可以改善 v8）</td></tr><tr><td>自文档化</td><td>可读性差（工具生成文档）</td></tr></tbody></table><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d919b2063c9b48d49efe6c65247f1762~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="二、typescript特性" tabindex="-1">二、TypeScript特性 <a class="header-anchor" href="#二、typescript特性" aria-hidden="true">#</a></h2><p>TypeScript作为JavaScript的超集，TypeScript究竟比JavaScript多了哪些特性</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f99f0ab6228460db1091f74a7532571~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><ul><li>相较于JS而言，TS拥有了静态类型，更加<strong>严格的语法</strong>，更强大的功能；</li><li>TS可以在代码执行前就完成代码的检查，减小了运行时异常的出现的几率；</li><li>TS代码可以编译为<strong>任意版本</strong>的JS代码，可有效解决不同JS运行环境的兼容问题；</li><li>同样的功能，TS的代码量要大于JS，但由于TS的代码结构更加清晰，变量类型更加明确，在后期代码的<strong>维护</strong>中TS却远远胜于JS。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ef570319dd8e48259b9078030429e65f~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>也就是说我们编写的TypeScript代码，最终要编译成任意版本的JavaScript，这样就可以在任何可以使用JavaScript的地方使用它了~</p><p>TypeScript作为JavaScript的超集，也就是说<strong>JavaScript就是TypeScript</strong>，也可以说<strong>TypeScript只是带有文档的JavaScript</strong>，还可以说<strong>TypeScript只是JavaScript的一个编译器</strong></p><h2 id="三、搭建typescript环境" tabindex="-1">三、搭建TypeScript环境 <a class="header-anchor" href="#三、搭建typescript环境" aria-hidden="true">#</a></h2><p>TS代码需要通过编译器编译为JS，然后再交由JS解析器执行，所以我们要搭建TypeScript环境来写我们的TS代码</p><div class="language-powershell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm install </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g typescript</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>创建一个ts文件<code>helloTS.ts</code></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello TS</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>编译ts文件</p><div class="language-powershell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tsc .\\helloTS.ts</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>结果会生成js文件</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b91cac90f7f94e209ca01364ee7b59dc~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>这样就可以在浏览器中运行，也可以用node来执行了~</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1e75d259d5b145dcb98c9943fff52cff~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p><a href="https://www.typescriptlang.org/play" target="_blank" rel="noreferrer">https://www.typescriptlang.org/play</a></p><p>可以在官网playground中查看ts编译后的js代码</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0ca32a248e864d0fb300bdb5a0dc9e5d~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,46);function u(m,f,C,v,D,S){const e=l,t=n,p=r;return o(),c("div",null,[b,s(e,{readTime:"3",words:"1.1k"}),y,s(t),s(p)])}const T=i(h,[["render",u]]);export{F as __pageData,T as default};
