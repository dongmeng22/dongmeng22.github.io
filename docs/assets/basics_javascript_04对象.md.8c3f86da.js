import{_ as p,a as o}from"./chunks/Contributors.vue_vue_type_script_setup_true_lang.3dcd3b9e.js";import{_ as r}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.358bd1c3.js";import{_ as t,o as i,c,D as s,x as a,a as d,Q as D}from"./chunks/framework.c7127555.js";import"./chunks/commonjsHelpers.725317a4.js";const k=JSON.parse('{"title":"对象（Object）","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.1 内建对象","slug":"_1-1-内建对象","link":"#_1-1-内建对象","children":[]},{"level":2,"title":"1.2 宿主对象","slug":"_1-2-宿主对象","link":"#_1-2-宿主对象","children":[]},{"level":2,"title":"1.3 自定义对象","slug":"_1-3-自定义对象","link":"#_1-3-自定义对象","children":[]},{"level":2,"title":"2.1 创建对象","slug":"_2-1-创建对象","link":"#_2-1-创建对象","children":[{"level":3,"title":"方式一","slug":"方式一","link":"#方式一","children":[]},{"level":3,"title":"方式二","slug":"方式二","link":"#方式二","children":[]}]},{"level":2,"title":"2.2 向对象中添加属性","slug":"_2-2-向对象中添加属性","link":"#_2-2-向对象中添加属性","children":[]},{"level":2,"title":"2.3 读取对象中的属性","slug":"_2-3-读取对象中的属性","link":"#_2-3-读取对象中的属性","children":[]},{"level":2,"title":"2.4 删除对象中的属性","slug":"_2-4-删除对象中的属性","link":"#_2-4-删除对象中的属性","children":[]},{"level":2,"title":"2.5 遍历","slug":"_2-5-遍历","link":"#_2-5-遍历","children":[]},{"level":2,"title":"2.6 使用对象字面量，在创建对象时直接向对象中添加属性","slug":"_2-6-使用对象字面量-在创建对象时直接向对象中添加属性","link":"#_2-6-使用对象字面量-在创建对象时直接向对象中添加属性","children":[]},{"level":2,"title":"Contributors","slug":"contributors","link":"#contributors","children":[]}],"relativePath":"basics/javascript/04对象.md","lastUpdated":null}'),y={name:"basics/javascript/04对象.md"},h=a("h1",{id:"对象-object",tabindex:"-1"},[d("对象（Object） "),a("a",{class:"header-anchor",href:"#对象-object","aria-hidden":"true"},"#")],-1),u=D(`<ul><li>对象是JS中的引用数据类型</li><li>对象是一种复合数据类型，在对象中可以保存多个不同数据类型的属性</li><li>使用typeof检查一个对象时，会返回object</li></ul><h1 id="_1-对象的分类" tabindex="-1">1. 对象的分类： <a class="header-anchor" href="#_1-对象的分类" aria-hidden="true">#</a></h1><h2 id="_1-1-内建对象" tabindex="-1">1.1 内建对象 <a class="header-anchor" href="#_1-1-内建对象" aria-hidden="true">#</a></h2><ul><li>由ES标准中定义的对象，在任何的ES的实现中都可以使用</li><li>比如：Math String Number Boolean Function Object….</li></ul><h2 id="_1-2-宿主对象" tabindex="-1">1.2 宿主对象 <a class="header-anchor" href="#_1-2-宿主对象" aria-hidden="true">#</a></h2><ul><li>由JS的运行环境提供的对象，目前来讲主要指由浏览器提供的对象</li><li>比如 BOM DOM</li></ul><h2 id="_1-3-自定义对象" tabindex="-1">1.3 自定义对象 <a class="header-anchor" href="#_1-3-自定义对象" aria-hidden="true">#</a></h2><ul><li>由开发人员自己创建的对象</li></ul><h1 id="_2-操作对象" tabindex="-1">2. 操作对象 <a class="header-anchor" href="#_2-操作对象" aria-hidden="true">#</a></h1><h2 id="_2-1-创建对象" tabindex="-1">2.1 创建对象 <a class="header-anchor" href="#_2-1-创建对象" aria-hidden="true">#</a></h2><h3 id="方式一" tabindex="-1">方式一 <a class="header-anchor" href="#方式一" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="方式二" tabindex="-1">方式二 <a class="header-anchor" href="#方式二" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-2-向对象中添加属性" tabindex="-1">2.2 向对象中添加属性 <a class="header-anchor" href="#_2-2-向对象中添加属性" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">对象</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">属性名 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> 属性值</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">对象[“属性名”] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> 属性值</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//这种方式能够使用特殊的属性名</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>对象的属性名没有任何要求，不需要遵守标识符的规范，但是在开发中，尽量按照标识符的要求去写。</li><li>属性值也可以任意的数据类型，甚至是一个对象</li></ul><h2 id="_2-3-读取对象中的属性" tabindex="-1">2.3 读取对象中的属性 <a class="header-anchor" href="#_2-3-读取对象中的属性" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">对象</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">属性名</span></span>
<span class="line"><span style="color:#A6ACCD;">对象[“属性名”] </span><span style="color:#676E95;font-style:italic;">//“属性名”可以使字符串常量，也可以是字符串变量</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>如果读取一个对象中没有的属性，它不会报错，而是返回一个undefined</li></ul><h2 id="_2-4-删除对象中的属性" tabindex="-1">2.4 删除对象中的属性 <a class="header-anchor" href="#_2-4-删除对象中的属性" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">delete</span><span style="color:#A6ACCD;"> 对象</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">属性名  </span></span>
<span class="line"><span style="color:#89DDFF;">delete</span><span style="color:#A6ACCD;"> 对象[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">属性名</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_2-5-遍历" tabindex="-1">2.5 遍历 <a class="header-anchor" href="#_2-5-遍历" aria-hidden="true">#</a></h2><ul><li>使用in检查对象中是否含有指定属性</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">”属性名” </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> 对象</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>如果在对象中含有该属性，则返回true</p></li><li><p>如果没有则返回false</p></li><li><p>循环遍历对象自身的和继承的可枚举属性(不含Symbol属性).</p></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">};</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> obj) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">obj</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_2-6-使用对象字面量-在创建对象时直接向对象中添加属性" tabindex="-1">2.6 使用对象字面量，在创建对象时直接向对象中添加属性 <a class="header-anchor" href="#_2-6-使用对象字面量-在创建对象时直接向对象中添加属性" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">属性名</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">属性值</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">属性名</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">属性值</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">属性名</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">属性值</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">属性名</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">属性值  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h1 id="_3-基本数据类型和引用数据类型的区别" tabindex="-1">3. 基本数据类型和引用数据类型的区别 <a class="header-anchor" href="#_3-基本数据类型和引用数据类型的区别" aria-hidden="true">#</a></h1><ul><li>基本数据类型 String Number Boolean Null Undefined</li><li>引用数据类型 Object</li><li>基本数据类型的数据，变量是直接保存的它的值。</li><li>变量与变量之间是互相独立的，修改一个变量不会影响其他的变量。</li><li>引用数据类型的数据，变量是保存的对象的引用（内存地址）。</li><li>如果多个变量指向的是同一个对象，此时修改一个变量的属性，会影响其他的变量。</li><li>比较两个变量时，对于基本数据类型，比较的就是值，</li><li>对于引用数据类型比较的是地址，地址相同才相同</li></ul><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-hidden="true">#</a></h2>`,32);function F(C,b,A,_,m,v){const n=r,l=p,e=o;return i(),c("div",null,[h,s(n,{readTime:"2",words:"709"}),u,s(l),s(e)])}const E=t(y,[["render",F]]);export{k as __pageData,E as default};
